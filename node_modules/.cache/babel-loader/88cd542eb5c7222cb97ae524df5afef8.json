{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return _openBlock(), _createBlock(_component_router_view);\n}","map":{"version":3,"mappings":";;;;uBACEA,aAA2BC,sBAA3B","names":["_createBlock","_component_router_view"],"sourceRoot":"","sources":["D:\\0. TaiPT\\2.Vue JS\\sakai-vue\\src\\AppWrapper.vue"],"sourcesContent":["<template>\r\n  <router-view></router-view>\r\n</template>\r\n\r\n<script>\r\nimport EventBus from './AppEventBus';\r\n\r\nexport default {\r\n  themeChangeListener: null,\r\n  mounted() {\r\n    this.themeChangeListener = (event) => {\r\n      const elementId = 'theme-link';\r\n      const linkElement = document.getElementById(elementId);\r\n      const cloneLinkElement = linkElement.cloneNode(true);\r\n      const newThemeUrl = linkElement.getAttribute('href').replace(this.$appState.theme, event.theme);\r\n\r\n      cloneLinkElement.setAttribute('id', elementId + '-clone');\r\n      cloneLinkElement.setAttribute('href', newThemeUrl);\r\n      cloneLinkElement.addEventListener('load', () => {\r\n        linkElement.remove();\r\n        cloneLinkElement.setAttribute('id', elementId);\r\n      });\r\n      linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\r\n\r\n      this.$appState.theme = event.theme;\r\n      this.$appState.darkTheme = event.dark;\r\n    };\r\n\r\n    EventBus.on('theme-change', this.themeChangeListener);\r\n  },\r\n  beforeUnmount() {\r\n    EventBus.off('theme-change', this.themeChangeListener);\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}