{"ast":null,"code":"import ProductService from '../service/ProductService';\nexport default {\n  data() {\n    return {\n      display: false,\n      displayConfirmation: false,\n      visibleLeft: false,\n      visibleRight: false,\n      visibleTop: false,\n      visibleBottom: false,\n      visibleFull: false,\n      products: null,\n      selectedProduct: null\n    };\n  },\n\n  productService: null,\n\n  created() {\n    this.productService = new ProductService();\n  },\n\n  mounted() {\n    this.productService.getProductsSmall().then(data => this.products = data);\n  },\n\n  methods: {\n    open() {\n      this.display = true;\n    },\n\n    close() {\n      this.display = false;\n    },\n\n    openConfirmation() {\n      this.displayConfirmation = true;\n    },\n\n    closeConfirmation() {\n      this.displayConfirmation = false;\n    },\n\n    toggle(event) {\n      this.$refs.op.toggle(event);\n    },\n\n    toggleDataTable(event) {\n      this.$refs.op2.toggle(event);\n    },\n\n    formatCurrency(value) {\n      return value.toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      });\n    },\n\n    onProductSelect(event) {\n      this.$refs.op.hide();\n      this.$toast.add({\n        severity: 'info',\n        summary: 'Product Selected',\n        detail: event.data.name,\n        life: 3000\n      });\n    },\n\n    confirm(event) {\n      this.$confirm.require({\n        target: event.currentTarget,\n        message: 'Are you sure you want to proceed?',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.$toast.add({\n            severity: 'info',\n            summary: 'Confirmed',\n            detail: 'You have accepted',\n            life: 3000\n          });\n        },\n        reject: () => {\n          this.$toast.add({\n            severity: 'error',\n            summary: 'Rejected',\n            detail: 'You have rejected',\n            life: 3000\n          });\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoHA,OAAOA,cAAP,MAA2B,2BAA3B;AAEA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,OAAO,EAAE,KADJ;MAELC,mBAAmB,EAAE,KAFhB;MAGLC,WAAW,EAAE,KAHR;MAILC,YAAY,EAAE,KAJT;MAKLC,UAAU,EAAE,KALP;MAMLC,aAAa,EAAE,KANV;MAOLC,WAAW,EAAE,KAPR;MAQLC,QAAQ,EAAE,IARL;MASLC,eAAe,EAAE;IATZ,CAAP;EAWD,CAbY;;EAcbC,cAAc,EAAE,IAdH;;EAebC,OAAO,GAAG;IACR,KAAKD,cAAL,GAAsB,IAAIX,cAAJ,EAAtB;EACD,CAjBY;;EAkBba,OAAO,GAAG;IACR,KAAKF,cAAL,CAAoBG,gBAApB,GAAuCC,IAAvC,CAA4Cd,IAAG,IAAK,KAAKQ,QAAL,GAAgBR,IAApE;EACD,CApBY;;EAqBbe,OAAO,EAAE;IACPC,IAAI,GAAG;MACL,KAAKf,OAAL,GAAe,IAAf;IACD,CAHM;;IAIPgB,KAAK,GAAG;MACN,KAAKhB,OAAL,GAAe,KAAf;IACD,CANM;;IAOPiB,gBAAgB,GAAG;MACjB,KAAKhB,mBAAL,GAA2B,IAA3B;IACD,CATM;;IAUPiB,iBAAiB,GAAG;MAClB,KAAKjB,mBAAL,GAA2B,KAA3B;IACD,CAZM;;IAaPkB,MAAM,CAACC,KAAD,EAAQ;MACZ,KAAKC,KAAL,CAAWC,EAAX,CAAcH,MAAd,CAAqBC,KAArB;IACD,CAfM;;IAgBPG,eAAe,CAACH,KAAD,EAAQ;MACrB,KAAKC,KAAL,CAAWG,GAAX,CAAeL,MAAf,CAAsBC,KAAtB;IACD,CAlBM;;IAmBPK,cAAc,CAACC,KAAD,EAAQ;MACpB,OAAOA,KAAK,CAACC,cAAN,CAAqB,OAArB,EAA8B;QAACC,KAAK,EAAE,UAAR;QAAoBC,QAAQ,EAAE;MAA9B,CAA9B,CAAP;IACD,CArBM;;IAsBPC,eAAe,CAACV,KAAD,EAAQ;MACrB,KAAKC,KAAL,CAAWC,EAAX,CAAcS,IAAd;MACA,KAAKC,MAAL,CAAYC,GAAZ,CAAgB;QAACC,QAAQ,EAAC,MAAV;QAAkBC,OAAO,EAAE,kBAA3B;QAA+CC,MAAM,EAAEhB,KAAK,CAACrB,IAAN,CAAWsC,IAAlE;QAAwEC,IAAI,EAAE;MAA9E,CAAhB;IACD,CAzBM;;IA0BPC,OAAO,CAACnB,KAAD,EAAQ;MACb,KAAKoB,QAAL,CAAcC,OAAd,CAAsB;QACpBC,MAAM,EAAEtB,KAAK,CAACuB,aADM;QAEpBC,OAAO,EAAE,mCAFW;QAGpBC,IAAI,EAAE,4BAHc;QAIpBC,MAAM,EAAE,MAAM;UACZ,KAAKd,MAAL,CAAYC,GAAZ,CAAgB;YAACC,QAAQ,EAAC,MAAV;YAAkBC,OAAO,EAAC,WAA1B;YAAuCC,MAAM,EAAC,mBAA9C;YAAmEE,IAAI,EAAE;UAAzE,CAAhB;QACD,CANmB;QAOpBS,MAAM,EAAE,MAAM;UACZ,KAAKf,MAAL,CAAYC,GAAZ,CAAgB;YAACC,QAAQ,EAAC,OAAV;YAAmBC,OAAO,EAAC,UAA3B;YAAuCC,MAAM,EAAC,mBAA9C;YAAmEE,IAAI,EAAE;UAAzE,CAAhB;QACF;MAToB,CAAtB;IAWF;;EAtCO;AArBI,CAAf","names":["ProductService","data","display","displayConfirmation","visibleLeft","visibleRight","visibleTop","visibleBottom","visibleFull","products","selectedProduct","productService","created","mounted","getProductsSmall","then","methods","open","close","openConfirmation","closeConfirmation","toggle","event","$refs","op","toggleDataTable","op2","formatCurrency","value","toLocaleString","style","currency","onProductSelect","hide","$toast","add","severity","summary","detail","name","life","confirm","$confirm","require","target","currentTarget","message","icon","accept","reject"],"sourceRoot":"","sources":["D:\\0. TaiPT\\2.Vue JS\\sakai-vue\\src\\components\\OverlayDemo.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid\">\r\n    <div class=\"col-12 lg:col-6\">\r\n      <div class=\"card p-fluid\">\r\n        <h5>Dialog</h5>\r\n        <Dialog header=\"Dialog\" v-model:visible=\"display\" :breakpoints=\"{'960px': '75vw'}\" :style=\"{width: '30vw'}\" :modal=\"true\">\r\n          <p class=\"line-height-3 m-0\">\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\r\n            quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit\r\n            in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n          </p>\r\n          <template #footer>\r\n            <Button label=\"Ok\" @click=\"close\" icon=\"pi pi-check\" class=\"p-button-outlined\"/>\r\n          </template>\r\n        </Dialog>\r\n        <Button label=\"Show\" icon=\"pi pi-external-link\" style=\"width: auto\" @click=\"open\"/>\r\n      </div>\r\n      <div class=\"card p-fluid\">\r\n        <h5>Overlay Panel</h5>\r\n        <div class=\"grid formgrid\">\r\n          <div class=\"col-6\">\r\n            <Button type=\"button\" label=\"Image\" @click=\"toggle\" class=\"p-button-success\"/>\r\n            <OverlayPanel ref=\"op\" appendTo=\"body\" :showCloseIcon=\"true\">\r\n              <img src=\"images/nature/nature9.jpg\" alt=\"Nature 9\" />\r\n            </OverlayPanel>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <Button type=\"button\" label=\"DataTable\" @click=\"toggleDataTable\" class=\"p-button-success\"/>\r\n            <OverlayPanel ref=\"op2\" appendTo=\"body\" :showCloseIcon=\"true\" id=\"overlay_panel\" style=\"width: 450px\">\r\n              <DataTable :value=\"products\" v-model:selection=\"selectedProduct\" selectionMode=\"single\" :paginator=\"true\" :rows=\"5\" @row-select=\"onProductSelect\" responsiveLayout=\"scroll\">\r\n                <Column field=\"name\" header=\"Name\" :sortable=\"true\" headerStyle=\"min-width:10rem;\"></Column>\r\n                <Column header=\"Image\" headerStyle=\"min-width:10rem;\">\r\n                  <template #body=\"slotProps\">\r\n                    <img :src=\"'images/product/' + slotProps.data.image\" :alt=\"slotProps.data.image\" width=\"100\" class=\"shadow-2\" />\r\n                  </template>\r\n                </Column>\r\n                <Column field=\"price\" header=\"Price\" :sortable=\"true\" headerStyle=\"min-width:8rem;\">\r\n                  <template #body=\"slotProps\">\r\n                    {{formatCurrency(slotProps.data.price)}}\r\n                  </template>\r\n                </Column>\r\n              </DataTable>\r\n            </OverlayPanel>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 lg:col-6\">\r\n      <div class=\"card p-fluid\">\r\n        <h5>Confirmation</h5>\r\n        <Button label=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger\" style=\"width: auto\" @click=\"openConfirmation\" />\r\n        <Dialog header=\"Confirmation\" v-model:visible=\"displayConfirmation\" :style=\"{width: '350px'}\" :modal=\"true\">\r\n          <div class=\"flex align-items-center justify-content-center\">\r\n            <i class=\"pi pi-exclamation-triangle mr-3\" style=\"font-size: 2rem\" />\r\n            <span>Are you sure you want to proceed?</span>\r\n          </div>\r\n          <template #footer>\r\n            <Button label=\"No\" icon=\"pi pi-times\" @click=\"closeConfirmation\" class=\"p-button-text\"/>\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" @click=\"closeConfirmation\" class=\"p-button-text\" autofocus />\r\n          </template>\r\n        </Dialog>\r\n      </div>\r\n      <div class=\"card\">\r\n        <h5>Sidebar</h5>\r\n        <Sidebar v-model:visible=\"visibleLeft\" :baseZIndex=\"1000\">\r\n          <h1 style=\"font-weight:normal\">Left Sidebar</h1>\r\n        </Sidebar>\r\n\r\n        <Sidebar v-model:visible=\"visibleRight\" :baseZIndex=\"1000\" position=\"right\">\r\n          <h1 style=\"font-weight:normal\">Right Sidebar</h1>\r\n        </Sidebar>\r\n\r\n        <Sidebar v-model:visible=\"visibleTop\" :baseZIndex=\"1000\" position=\"top\">\r\n          <h1 style=\"font-weight:normal\">Top Sidebar</h1>\r\n        </Sidebar>\r\n\r\n        <Sidebar v-model:visible=\"visibleBottom\" :baseZIndex=\"1000\" position=\"bottom\">\r\n          <h1 style=\"font-weight:normal\">Bottom Sidebar</h1>\r\n        </Sidebar>\r\n\r\n        <Sidebar v-model:visible=\"visibleFull\" :baseZIndex=\"1000\" position=\"full\">\r\n          <h1 style=\"font-weight:normal\">Full Screen</h1>\r\n        </Sidebar>\r\n\r\n        <Button icon=\"pi pi-arrow-right\" class=\"p-button-warning\" @click=\"visibleLeft = true\" style=\"margin-right:.25em\" />\r\n        <Button icon=\"pi pi-arrow-left\" class=\"p-button-warning\" @click=\"visibleRight = true\" style=\"margin-right:.25em\" />\r\n        <Button icon=\"pi pi-arrow-down\" class=\"p-button-warning\" @click=\"visibleTop = true\" style=\"margin-right:.25em\" />\r\n        <Button icon=\"pi pi-arrow-up\" class=\"p-button-warning\" @click=\"visibleBottom = true\" style=\"margin-right:.25em\" />\r\n        <Button icon=\"pi pi-external-link\" class=\"p-button-warning\" @click=\"visibleFull = true\"  />\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 lg:col-6\">\r\n      <div class=\"card\">\r\n        <h5>Tooltip</h5>\r\n        <div class=\"formgroup-inline\">\r\n          <div class=\"field\">\r\n            <InputText type=\"text\" placeholder=\"Username\" v-tooltip=\"'Your username'\" />\r\n          </div>\r\n\r\n          <Button type=\"button\" label=\"Save\" icon=\"pi pi-check\" v-tooltip=\"'Click to proceed'\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 lg:col-6\">\r\n      <div class=\"card\">\r\n        <h5>ConfirmPopup</h5>\r\n        <ConfirmPopup></ConfirmPopup>\r\n        <Button ref=\"popup\" @click=\"confirm($event)\" icon=\"pi pi-check\" label=\"Confirm\" class=\"mr-2\"></Button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductService from '../service/ProductService'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      display: false,\r\n      displayConfirmation: false,\r\n      visibleLeft: false,\r\n      visibleRight: false,\r\n      visibleTop: false,\r\n      visibleBottom: false,\r\n      visibleFull: false,\r\n      products: null,\r\n      selectedProduct: null\r\n    }\r\n  },\r\n  productService: null,\r\n  created() {\r\n    this.productService = new ProductService();\r\n  },\r\n  mounted() {\r\n    this.productService.getProductsSmall().then(data => this.products = data);\r\n  },\r\n  methods: {\r\n    open() {\r\n      this.display = true;\r\n    },\r\n    close() {\r\n      this.display = false;\r\n    },\r\n    openConfirmation() {\r\n      this.displayConfirmation = true;\r\n    },\r\n    closeConfirmation() {\r\n      this.displayConfirmation = false;\r\n    },\r\n    toggle(event) {\r\n      this.$refs.op.toggle(event);\r\n    },\r\n    toggleDataTable(event) {\r\n      this.$refs.op2.toggle(event);\r\n    },\r\n    formatCurrency(value) {\r\n      return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    },\r\n    onProductSelect(event) {\r\n      this.$refs.op.hide();\r\n      this.$toast.add({severity:'info', summary: 'Product Selected', detail: event.data.name, life: 3000});\r\n    },\r\n    confirm(event) {\r\n      this.$confirm.require({\r\n        target: event.currentTarget,\r\n        message: 'Are you sure you want to proceed?',\r\n        icon: 'pi pi-exclamation-triangle',\r\n        accept: () => {\r\n          this.$toast.add({severity:'info', summary:'Confirmed', detail:'You have accepted', life: 3000});\r\n        },\r\n        reject: () => {\r\n          this.$toast.add({severity:'error', summary:'Rejected', detail:'You have rejected', life: 3000});\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}