{"ast":null,"code":"/**\r\n * Escape HTML (anti XSS attack)\r\n * @param { string } str html string\r\n */\nconst escapeHTML = str => {\n  str.replace(/[&<>'\"]/g, tag => ({\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    \"'\": '&#39;',\n    '\"': '&quot;'\n  })[tag] || tag);\n};\n/**\r\n * Random integer in range\r\n * @param { number } min\r\n * @param { number } max\r\n */\n\n\nconst randomInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n/**\r\n * Random hex colorcode\r\n * @param { number } ms miliseconds\r\n */\n\n\nconst randomHexColorCode = () => {\n  let n = (Math.random() * 0xfffff * 1000000).toString(16);\n  return '#' + n.slice(0, 6);\n};\n/**\r\n * Random rgba colorcode\r\n * @param { number } alpha opacity\r\n */\n\n\nconst randomRPGA = alpha => {\n  if (typeof alpha === 'undefined') {\n    alpha = 1;\n  }\n\n  let o = Math.round,\n      r = Math.random,\n      s = 255;\n  return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + alpha + ')';\n};\n/**\r\n * Detect mobile / PC devices\r\n */\n\n\nconst detectDeviceType = () => {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ? 'Mobile' : 'Desktop';\n};\n/**\r\n * @param { string } str String to be converted\r\n * @param { number } type 1-All capital 2 - all lowercase 3 - initial capital other - no conversion\r\n */\n\n\nfunction turnCase(str, type) {\n  switch (type) {\n    case 1:\n      return str.toUpperCase();\n\n    case 2:\n      return str.toLowerCase();\n\n    case 3:\n      return str[0].toUpperCase() + str.substr(1).toLowerCase();\n\n    default:\n      return str;\n  }\n}\n/**\r\n * format miliseconds to readable in english\r\n * @param { number } ms miliseconds\r\n */\n\n\nconst formatDurationEnglish = ms => {\n  if (ms < 0) ms = -ms;\n  const time = {\n    day: Math.floor(ms / 86400000),\n    hour: Math.floor(ms / 3600000) % 24,\n    minute: Math.floor(ms / 60000) % 60,\n    second: Math.floor(ms / 1000) % 60,\n    millisecond: Math.floor(ms) % 1000\n  };\n  return Object.entries(time).filter(val => val[1] !== 0).map(([key, val]) => `${val} ${key}${val !== 1 ? 's' : ''}`).join(', ');\n};\n/**\r\n * format miliseconds to readable in vietnamese\r\n * @param { number } ms miliseconds\r\n */\n\n\nconst formatDurationVietnamese = ms => {\n  if (ms < 0) ms = -ms;\n  const time = {\n    day: Math.floor(ms / 86400000),\n    hour: Math.floor(ms / 3600000) % 24,\n    minute: Math.floor(ms / 60000) % 60,\n    second: Math.floor(ms / 1000) % 60,\n    millisecond: Math.floor(ms) % 1000\n  };\n  const timeVietnamese = {\n    day: 'Ngày',\n    hour: 'Giờ',\n    minute: 'Phút',\n    second: 'Giây',\n    millisecond: 'Mili giây'\n  };\n  return Object.entries(time).filter(val => val[1] !== 0).map(([key, val]) => `${val} ${timeVietnamese[key]}`).join(', ');\n};\n/**\r\n * sort array by date\r\n * @param { object } data\r\n * @param { string } field\r\n * @param { number } reverse 0: asc, 1: desc\r\n */\n\n\nconst sortByDate = (data, field, reverse = 1) => {\n  let result = data;\n\n  if (data && data.length) {\n    result = data.sort((d1, d2) => {\n      let date1 = new Date(d1[field] || '');\n      let date2 = new Date(d2[field] || '');\n      return (date1 ? date1.getTime() : 0) - (date2 ? date2.getTime() : 0) > 0 ? reverse : reverse * -1;\n    });\n  }\n\n  return result;\n};\n/**\r\n * get URL parameters in object from url\r\n * @param { string } url\r\n */\n\n\nconst getURLParameters = url => (url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce((a, v) => (a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1), a), {});\n/**\r\n * merge 2 objects\r\n * @param { object } a\r\n * @param { object } b\r\n */\n\n\nconst mergeObjects = (a, b) => {\n  if (!a) {\n    return a || {};\n  }\n\n  if (!b) {\n    return b || {};\n  }\n\n  return { ...a,\n    ...b\n  };\n};\n/**\r\n * merge 2 arrays\r\n * @param { object } a\r\n * @param { object } b\r\n */\n\n\nconst combineArray = (a, b) => {\n  let result = Array.isArray(a) ? [...a] : [a];\n\n  if (Array.isArray(b)) {\n    result = [...result, ...b];\n  } else {\n    result.push(b);\n  }\n\n  return result;\n};\n/**\r\n * find first item by value of the field\r\n * @param { object } array\r\n * @param { string } field\r\n * @param { string } value\r\n */\n\n\nconst getItemByFieldValue = (array, field, value) => {\n  const result = array.find(obj => {\n    return obj[field] === value;\n  });\n  return result;\n};\n/**\r\n *  check string is empty\r\n * @param { string } text\r\n */\n\n\nconst isEmpty = text => {\n  return !text || `${text}`.trim().length === 0;\n};\n/**\r\n * validate email\r\n * @param { string } text\r\n */\n\n\nconst isEmail = text => {\n  const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return regex.test(String(text).toLowerCase());\n};\n/**\r\n * validate url\r\n * @param { string } text\r\n */\n\n\nconst isUrl = text => {\n  const regex = /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/;\n  return regex.test(text);\n};\n/**\r\n * auto add http protocol to url\r\n * @param { string } url\r\n */\n\n\nconst addHttp = url => {\n  if (!/^(?:f|ht)tps?\\:\\/\\//.test(url)) {\n    url = 'http://' + url;\n  }\n\n  return url;\n};\n/**\r\n * validate password: contain at least 1 lowercase character, 1 upppercase character, 1 number, 1 special character !@#$%^&* and min length is 8 characters\r\n * @param { string } password\r\n */\n\n\nconst validPassword = password => {\n  const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n  return regex.test(password);\n};\n/**\r\n * generate tree from flat array\r\n * @param { object } data\r\n * @param { object } options { idKey: 'id', parentKey: 'parentId', childrenKey: 'children' }\r\n */\n\n\nfunction arrayToTree(data, options) {\n  options = options || {};\n  const ID_KEY = options.idKey || 'id';\n  const PARENT_KEY = options.parentKey || 'parentId';\n  const CHILDREN_KEY = options.childrenKey || 'children';\n  let map = {};\n\n  for (let i = 0; i < data.length; i++) {\n    if (data[i][ID_KEY]) {\n      map[data[i][ID_KEY]] = data[i];\n      data[i][CHILDREN_KEY] = [];\n    }\n  }\n\n  for (let i = 0; i < data.length; i++) {\n    if (data[i][PARENT_KEY]) {\n      // is a child\n      if (map[data[i][PARENT_KEY]]) {\n        // for dirty data\n        map[data[i][PARENT_KEY]][CHILDREN_KEY].push(data[i]); // add child to parent\n\n        data.splice(i, 1); // remove from root\n\n        i--; // iterator correction\n      } else {\n        data[i][PARENT_KEY] = 0; // clean dirty data\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction convertToVueTree(data, keyName, labelName, dataName, iconName, childrenName) {\n  if (typeof data == 'object') {\n    if (Array.isArray(data)) {\n      data = data.map(item => {\n        let newItem = {\n          key: item[keyName],\n          label: item[labelName],\n          data: item[dataName],\n          icon: '',\n          children: convertToVueTree(item[childrenName], keyName, labelName, dataName, iconName, childrenName),\n          leaf: false\n        };\n        return newItem;\n      });\n    } else {\n      data = {\n        key: data[keyName],\n        label: data[labelName],\n        data: data[dataName],\n        icon: '',\n        children: convertToVueTree(data[childrenName], keyName, labelName, dataName, iconName, childrenName),\n        leaf: false\n      };\n    }\n  }\n\n  return data;\n}\n\nfunction convertToVueTreeTable(data, lazy, keyName, object, childrenName) {\n  if (typeof data == 'object') {\n    if (!Array.isArray(data)) {\n      data = [data];\n    }\n\n    data = data.map(item => {\n      return {\n        key: item[keyName],\n        data: object.reduce((acc, key) => (acc[key] = item[key], acc), {}),\n        children: item[childrenName] ? convertToVueTreeTable(item[childrenName], lazy, keyName, object, childrenName) : [],\n        leaf: lazy ? false : !(item[childrenName] && item[childrenName].length)\n      };\n    });\n  }\n\n  return data;\n}\n\nconst findItemNested = (array, key, value, nestingKey = 'children') => array.reduce((a, item) => {\n  if (a) return a;\n  if (item[key] === value) return item;\n  if (item[nestingKey]) return findItemNested(item[nestingKey], key, value, nestingKey);\n}, null);\n\nfunction updateNestedArrayById(data, id, newItem, idKey, childrenKey = 'children') {\n  if (Array.isArray(data)) {\n    data = data.map(item => {\n      return updateNestedArrayById(item, id, newItem, idKey);\n    });\n  }\n\n  if (data[idKey] == id) {\n    data = newItem;\n  }\n\n  if (data[childrenKey] !== undefined && data[childrenKey].length > 0) {\n    for (let i = 0; i < data[childrenKey].length; i++) {\n      data[childrenKey][i] = updateNestedArrayById(data[childrenKey][i], id, newItem, idKey);\n    }\n  }\n\n  return data;\n} // function removeNestedArrayById(array, id, idKey, childrenKey) {\n//   return array\n//     .filter((el) => el[idKey] !== id)\n//     .map((el) => {\n//       if (!el[childrenKey] || !Array.isArray(el[childrenKey])) return el;\n//       el[childrenKey] = removeNestedArrayById(el[childrenKey], id);\n//       return el;\n//     });\n// }\n\n\nfunction removeNestedArrayById(array, id, idKey, childrenKey) {\n  return array.map(item => {\n    return { ...item\n    };\n  }).filter(item => {\n    if (childrenKey in item) {\n      item[childrenKey] = removeNestedArrayById(item[childrenKey], id, idKey, childrenKey);\n    }\n\n    return item[idKey] !== id;\n  });\n}\n\nconst moveItemNestedArray = (data, fromId, toId, idKey, childrenKey) => {\n  const search = array => array.some((o, index) => {\n    if (o[idKey] === fromId) source = {\n      array,\n      index\n    };else if (o[idKey] === toId) target = o;\n    return source && target || search(o[childrenKey]);\n  });\n\n  let source, target;\n  if (!search(data)) return;\n  target[childrenKey].push(...source.array.splice(source.index, 1));\n};\n\nfunction getKeyByValue(object, value) {\n  return object ? Object.keys(object).find(key => object[key] === value) : null;\n}\n\nfunction clone(from) {\n  let to = undefined;\n  if (from == null || typeof from != 'object') return from;\n  if (from.constructor !== Object && from.constructor !== Array) return from;\n  if (from.constructor === Date || from.constructor === RegExp || from.constructor === Function || from.constructor === String || from.constructor === Number || from.constructor === Boolean) return new from.constructor(from);\n  to = new from.constructor();\n\n  for (let name in from) {\n    to[name] = typeof to[name] == 'undefined' ? clone(from[name], null) : to[name];\n  }\n\n  return to;\n}\n\nfunction objectDataToQueryString(obj) {\n  let str = [];\n\n  for (let p in obj) {\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n    }\n  }\n\n  return str.join('&');\n}\n\nfunction validateCode(code) {\n  const regex = /^\\w+$/;\n\n  if (!regex.test(code)) {\n    return false;\n  }\n\n  return true;\n} // function groupArrayByMultipleKeys(array, idKey, keys, arrayKey) {\n//     return array.reduce(function (res, currentValue) {\n//         if (res.findIndex((item) => {\n//             return keys.some((itm) => {\n//                 return item[itm] === currentValue[itm];\n//             });\n//         }) === -1) {\n//\n//             res.push(keys.reduce((arr, cur) => {\n//                 arr[cur] = currentValue[cur]\n//                 return arr;\n//             }, {}));\n//         }\n//         return res;\n//     }, []).map(function (group) {\n//         return {\n//             ...group,\n//             [arrayKey]: array.filter(function (_el) {\n//                 return _el[idKey] === group[idKey];\n//             }).map(function (_el) {\n//                 const {, ...el} = _el;\n//                 return el;\n//             })\n//         }\n//     });\n// }\n\n\nexport { escapeHTML, randomHexColorCode, randomInteger, randomRPGA, detectDeviceType, turnCase, formatDurationEnglish, formatDurationVietnamese, sortByDate, getURLParameters, mergeObjects, combineArray, getItemByFieldValue, isEmpty, isEmail, isUrl, addHttp, validPassword, arrayToTree, convertToVueTree, convertToVueTreeTable, findItemNested, updateNestedArrayById, moveItemNestedArray, removeNestedArrayById, clone, getKeyByValue, objectDataToQueryString, validateCode };","map":{"version":3,"names":["escapeHTML","str","replace","tag","randomInteger","min","max","Math","floor","random","randomHexColorCode","n","toString","slice","randomRPGA","alpha","o","round","r","s","detectDeviceType","test","navigator","userAgent","turnCase","type","toUpperCase","toLowerCase","substr","formatDurationEnglish","ms","time","day","hour","minute","second","millisecond","Object","entries","filter","val","map","key","join","formatDurationVietnamese","timeVietnamese","sortByDate","data","field","reverse","result","length","sort","d1","d2","date1","Date","date2","getTime","getURLParameters","url","match","reduce","a","v","indexOf","mergeObjects","b","combineArray","Array","isArray","push","getItemByFieldValue","array","value","find","obj","isEmpty","text","trim","isEmail","regex","String","isUrl","addHttp","validPassword","password","arrayToTree","options","ID_KEY","idKey","PARENT_KEY","parentKey","CHILDREN_KEY","childrenKey","i","splice","convertToVueTree","keyName","labelName","dataName","iconName","childrenName","item","newItem","label","icon","children","leaf","convertToVueTreeTable","lazy","object","acc","findItemNested","nestingKey","updateNestedArrayById","id","undefined","removeNestedArrayById","moveItemNestedArray","fromId","toId","search","some","index","source","target","getKeyByValue","keys","clone","from","to","constructor","RegExp","Function","Number","Boolean","name","objectDataToQueryString","p","hasOwnProperty","encodeURIComponent","validateCode","code"],"sources":["D:/0. TaiPT/2.Vue JS/sakai-vue/src/commons/Utils.js"],"sourcesContent":["/**\r\n * Escape HTML (anti XSS attack)\r\n * @param { string } str html string\r\n */\r\nconst escapeHTML = (str) => {\r\n    str.replace(\r\n        /[&<>'\"]/g,\r\n        (tag) =>\r\n            ({\r\n                '&': '&amp;',\r\n                '<': '&lt;',\r\n                '>': '&gt;',\r\n                \"'\": '&#39;',\r\n                '\"': '&quot;',\r\n            }[tag] || tag)\r\n    );\r\n};\r\n\r\n/**\r\n * Random integer in range\r\n * @param { number } min\r\n * @param { number } max\r\n */\r\nconst randomInteger = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\n/**\r\n * Random hex colorcode\r\n * @param { number } ms miliseconds\r\n */\r\nconst randomHexColorCode = () => {\r\n    let n = (Math.random() * 0xfffff * 1000000).toString(16);\r\n    return '#' + n.slice(0, 6);\r\n};\r\n\r\n/**\r\n * Random rgba colorcode\r\n * @param { number } alpha opacity\r\n */\r\nconst randomRPGA = (alpha) => {\r\n    if (typeof alpha === 'undefined') {\r\n        alpha = 1;\r\n    }\r\n    let o = Math.round,\r\n        r = Math.random,\r\n        s = 255;\r\n    return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ',' + alpha + ')';\r\n};\r\n\r\n/**\r\n * Detect mobile / PC devices\r\n */\r\nconst detectDeviceType = () => {\r\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\r\n        ? 'Mobile'\r\n        : 'Desktop';\r\n};\r\n\r\n/**\r\n * @param { string } str String to be converted\r\n * @param { number } type 1-All capital 2 - all lowercase 3 - initial capital other - no conversion\r\n */\r\nfunction turnCase(str, type) {\r\n    switch (type) {\r\n        case 1:\r\n            return str.toUpperCase();\r\n        case 2:\r\n            return str.toLowerCase();\r\n        case 3:\r\n            return str[0].toUpperCase() + str.substr(1).toLowerCase();\r\n        default:\r\n            return str;\r\n    }\r\n}\r\n\r\n/**\r\n * format miliseconds to readable in english\r\n * @param { number } ms miliseconds\r\n */\r\nconst formatDurationEnglish = (ms) => {\r\n    if (ms < 0) ms = -ms;\r\n    const time = {\r\n        day: Math.floor(ms / 86400000),\r\n        hour: Math.floor(ms / 3600000) % 24,\r\n        minute: Math.floor(ms / 60000) % 60,\r\n        second: Math.floor(ms / 1000) % 60,\r\n        millisecond: Math.floor(ms) % 1000,\r\n    };\r\n    return Object.entries(time)\r\n        .filter((val) => val[1] !== 0)\r\n        .map(([key, val]) => `${val} ${key}${val !== 1 ? 's' : ''}`)\r\n        .join(', ');\r\n};\r\n\r\n/**\r\n * format miliseconds to readable in vietnamese\r\n * @param { number } ms miliseconds\r\n */\r\nconst formatDurationVietnamese = (ms) => {\r\n    if (ms < 0) ms = -ms;\r\n    const time = {\r\n        day: Math.floor(ms / 86400000),\r\n        hour: Math.floor(ms / 3600000) % 24,\r\n        minute: Math.floor(ms / 60000) % 60,\r\n        second: Math.floor(ms / 1000) % 60,\r\n        millisecond: Math.floor(ms) % 1000,\r\n    };\r\n\r\n    const timeVietnamese = {\r\n        day: 'Ngày',\r\n        hour: 'Giờ',\r\n        minute: 'Phút',\r\n        second: 'Giây',\r\n        millisecond: 'Mili giây',\r\n    };\r\n    return Object.entries(time)\r\n        .filter((val) => val[1] !== 0)\r\n        .map(([key, val]) => `${val} ${timeVietnamese[key]}`)\r\n        .join(', ');\r\n};\r\n\r\n/**\r\n * sort array by date\r\n * @param { object } data\r\n * @param { string } field\r\n * @param { number } reverse 0: asc, 1: desc\r\n */\r\nconst sortByDate = (data, field, reverse = 1) => {\r\n    let result = data;\r\n    if (data && data.length) {\r\n        result = data.sort((d1, d2) => {\r\n            let date1 = new Date(d1[field] || '');\r\n            let date2 = new Date(d2[field] || '');\r\n            return (date1 ? date1.getTime() : 0) - (date2 ? date2.getTime() : 0) > 0 ? reverse : reverse * -1;\r\n        });\r\n    }\r\n    return result;\r\n};\r\n\r\n/**\r\n * get URL parameters in object from url\r\n * @param { string } url\r\n */\r\nconst getURLParameters = (url) =>\r\n    (url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce(\r\n        (a, v) => ((a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a),\r\n        {}\r\n    );\r\n\r\n/**\r\n * merge 2 objects\r\n * @param { object } a\r\n * @param { object } b\r\n */\r\nconst mergeObjects = (a, b) => {\r\n    if (!a) {\r\n        return a || {};\r\n    }\r\n    if (!b) {\r\n        return b || {};\r\n    }\r\n    return {...a, ...b};\r\n};\r\n\r\n/**\r\n * merge 2 arrays\r\n * @param { object } a\r\n * @param { object } b\r\n */\r\nconst combineArray = (a, b) => {\r\n    let result = Array.isArray(a) ? [...a] : [a];\r\n    if (Array.isArray(b)) {\r\n        result = [...result, ...b];\r\n    } else {\r\n        result.push(b);\r\n    }\r\n    return result;\r\n};\r\n\r\n/**\r\n * find first item by value of the field\r\n * @param { object } array\r\n * @param { string } field\r\n * @param { string } value\r\n */\r\nconst getItemByFieldValue = (array, field, value) => {\r\n    const result = array.find((obj) => {\r\n        return obj[field] === value;\r\n    });\r\n    return result;\r\n};\r\n\r\n/**\r\n *  check string is empty\r\n * @param { string } text\r\n */\r\nconst isEmpty = (text) => {\r\n    return !text || `${text}`.trim().length === 0;\r\n};\r\n\r\n/**\r\n * validate email\r\n * @param { string } text\r\n */\r\nconst isEmail = (text) => {\r\n    const regex =\r\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return regex.test(String(text).toLowerCase());\r\n};\r\n\r\n/**\r\n * validate url\r\n * @param { string } text\r\n */\r\nconst isUrl = (text) => {\r\n    const regex =\r\n        /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/;\r\n    return regex.test(text);\r\n};\r\n\r\n/**\r\n * auto add http protocol to url\r\n * @param { string } url\r\n */\r\nconst addHttp = (url) => {\r\n    if (!/^(?:f|ht)tps?\\:\\/\\//.test(url)) {\r\n        url = 'http://' + url;\r\n    }\r\n    return url;\r\n};\r\n\r\n/**\r\n * validate password: contain at least 1 lowercase character, 1 upppercase character, 1 number, 1 special character !@#$%^&* and min length is 8 characters\r\n * @param { string } password\r\n */\r\nconst validPassword = (password) => {\r\n    const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\r\n    return regex.test(password);\r\n};\r\n\r\n/**\r\n * generate tree from flat array\r\n * @param { object } data\r\n * @param { object } options { idKey: 'id', parentKey: 'parentId', childrenKey: 'children' }\r\n */\r\nfunction arrayToTree(data, options) {\r\n    options = options || {};\r\n    const ID_KEY = options.idKey || 'id';\r\n    const PARENT_KEY = options.parentKey || 'parentId';\r\n    const CHILDREN_KEY = options.childrenKey || 'children';\r\n\r\n    let map = {};\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i][ID_KEY]) {\r\n            map[data[i][ID_KEY]] = data[i];\r\n            data[i][CHILDREN_KEY] = [];\r\n        }\r\n    }\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (data[i][PARENT_KEY]) {\r\n            // is a child\r\n            if (map[data[i][PARENT_KEY]]) {\r\n                // for dirty data\r\n                map[data[i][PARENT_KEY]][CHILDREN_KEY].push(data[i]); // add child to parent\r\n                data.splice(i, 1); // remove from root\r\n                i--; // iterator correction\r\n            } else {\r\n                data[i][PARENT_KEY] = 0; // clean dirty data\r\n            }\r\n        }\r\n    }\r\n    return data;\r\n}\r\n\r\nfunction convertToVueTree(data, keyName, labelName, dataName, iconName, childrenName) {\r\n    if (typeof data == 'object') {\r\n        if (Array.isArray(data)) {\r\n            data = data.map((item) => {\r\n                let newItem = {\r\n                    key: item[keyName],\r\n                    label: item[labelName],\r\n                    data: item[dataName],\r\n                    icon: '',\r\n                    children: convertToVueTree(item[childrenName], keyName, labelName, dataName, iconName, childrenName),\r\n                    leaf: false,\r\n                };\r\n                return newItem;\r\n            });\r\n        } else {\r\n            data = {\r\n                key: data[keyName],\r\n                label: data[labelName],\r\n                data: data[dataName],\r\n                icon: '',\r\n                children: convertToVueTree(data[childrenName], keyName, labelName, dataName, iconName, childrenName),\r\n                leaf: false,\r\n            };\r\n        }\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nfunction convertToVueTreeTable(data, lazy, keyName, object, childrenName) {\r\n    if (typeof data == 'object') {\r\n        if (!Array.isArray(data)) {\r\n            data = [data];\r\n        }\r\n        data = data.map((item) => {\r\n            return {\r\n                key: item[keyName],\r\n                data: object.reduce((acc, key) => (acc[key] = item[key], acc), {}),\r\n                children: item[childrenName] ? convertToVueTreeTable(item[childrenName], lazy, keyName, object, childrenName) : [],\r\n                leaf: lazy ? false : !(item[childrenName] && item[childrenName].length)\r\n            };\r\n        });\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\nconst findItemNested = (array, key, value, nestingKey = 'children') =>\r\n    array.reduce((a, item) => {\r\n        if (a) return a;\r\n        if (item[key] === value) return item;\r\n        if (item[nestingKey]) return findItemNested(item[nestingKey], key, value, nestingKey);\r\n    }, null);\r\n\r\nfunction updateNestedArrayById(data, id, newItem, idKey, childrenKey = 'children') {\r\n    if (Array.isArray(data)) {\r\n        data = data.map((item) => {\r\n            return updateNestedArrayById(item, id, newItem, idKey);\r\n        });\r\n    }\r\n    if (data[idKey] == id) {\r\n        data = newItem;\r\n    }\r\n    if (data[childrenKey] !== undefined && data[childrenKey].length > 0) {\r\n        for (let i = 0; i < data[childrenKey].length; i++) {\r\n            data[childrenKey][i] = updateNestedArrayById(data[childrenKey][i], id, newItem, idKey);\r\n        }\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\n// function removeNestedArrayById(array, id, idKey, childrenKey) {\r\n//   return array\r\n//     .filter((el) => el[idKey] !== id)\r\n//     .map((el) => {\r\n//       if (!el[childrenKey] || !Array.isArray(el[childrenKey])) return el;\r\n//       el[childrenKey] = removeNestedArrayById(el[childrenKey], id);\r\n//       return el;\r\n//     });\r\n// }\r\n\r\nfunction removeNestedArrayById(array, id, idKey, childrenKey) {\r\n    return array\r\n        .map((item) => {\r\n            return {...item};\r\n        })\r\n        .filter((item) => {\r\n            if (childrenKey in item) {\r\n                item[childrenKey] = removeNestedArrayById(item[childrenKey], id, idKey, childrenKey);\r\n            }\r\n            return item[idKey] !== id;\r\n        });\r\n}\r\n\r\nconst moveItemNestedArray = (data, fromId, toId, idKey, childrenKey) => {\r\n    const search = (array) =>\r\n        array.some((o, index) => {\r\n            if (o[idKey] === fromId) source = {array, index};\r\n            else if (o[idKey] === toId) target = o;\r\n            return (source && target) || search(o[childrenKey]);\r\n        });\r\n    let source, target;\r\n\r\n    if (!search(data)) return;\r\n    target[childrenKey].push(...source.array.splice(source.index, 1));\r\n};\r\n\r\nfunction getKeyByValue(object, value) {\r\n    return object ? Object.keys(object).find((key) => object[key] === value) : null;\r\n}\r\n\r\nfunction clone(from) {\r\n    let to = undefined;\r\n    if (from == null || typeof from != 'object') return from;\r\n    if (from.constructor !== Object && from.constructor !== Array) return from;\r\n    if (\r\n        from.constructor === Date ||\r\n        from.constructor === RegExp ||\r\n        from.constructor === Function ||\r\n        from.constructor === String ||\r\n        from.constructor === Number ||\r\n        from.constructor === Boolean\r\n    )\r\n        return new from.constructor(from);\r\n\r\n    to = new from.constructor();\r\n\r\n    for (let name in from) {\r\n        to[name] = typeof to[name] == 'undefined' ? clone(from[name], null) : to[name];\r\n    }\r\n\r\n    return to;\r\n}\r\n\r\nfunction objectDataToQueryString(obj) {\r\n    let str = [];\r\n    for (let p in obj) {\r\n        if (obj.hasOwnProperty(p)) {\r\n            str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\r\n        }\r\n    }\r\n    return str.join('&');\r\n}\r\n\r\nfunction validateCode(code) {\r\n    const regex = /^\\w+$/;\r\n    if (!regex.test(code)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n// function groupArrayByMultipleKeys(array, idKey, keys, arrayKey) {\r\n//     return array.reduce(function (res, currentValue) {\r\n//         if (res.findIndex((item) => {\r\n//             return keys.some((itm) => {\r\n//                 return item[itm] === currentValue[itm];\r\n//             });\r\n//         }) === -1) {\r\n//\r\n//             res.push(keys.reduce((arr, cur) => {\r\n//                 arr[cur] = currentValue[cur]\r\n//                 return arr;\r\n//             }, {}));\r\n//         }\r\n//         return res;\r\n//     }, []).map(function (group) {\r\n//         return {\r\n//             ...group,\r\n//             [arrayKey]: array.filter(function (_el) {\r\n//                 return _el[idKey] === group[idKey];\r\n//             }).map(function (_el) {\r\n//                 const {, ...el} = _el;\r\n//                 return el;\r\n//             })\r\n//         }\r\n//     });\r\n// }\r\n\r\nexport {\r\n    escapeHTML,\r\n    randomHexColorCode,\r\n    randomInteger,\r\n    randomRPGA,\r\n    detectDeviceType,\r\n    turnCase,\r\n    formatDurationEnglish,\r\n    formatDurationVietnamese,\r\n    sortByDate,\r\n    getURLParameters,\r\n    mergeObjects,\r\n    combineArray,\r\n    getItemByFieldValue,\r\n    isEmpty,\r\n    isEmail,\r\n    isUrl,\r\n    addHttp,\r\n    validPassword,\r\n    arrayToTree,\r\n    convertToVueTree,\r\n    convertToVueTreeTable,\r\n    findItemNested,\r\n    updateNestedArrayById,\r\n    moveItemNestedArray,\r\n    removeNestedArrayById,\r\n    clone,\r\n    getKeyByValue,\r\n    objectDataToQueryString,\r\n    validateCode\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}