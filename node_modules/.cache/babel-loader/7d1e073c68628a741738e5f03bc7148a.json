{"ast":null,"code":"export default {\n  data() {\n    return {\n      icons: null,\n      filter: null\n    };\n  },\n\n  mounted() {\n    fetch('data/icons.json', {\n      headers: {\n        'Cache-Control': 'no-cache'\n      }\n    }).then(res => res.json()).then(d => {\n      let icons = d.icons;\n      let data = icons.filter(value => {\n        return value.icon.tags.indexOf('deprecate') === -1;\n      });\n      data.sort((icon1, icon2) => {\n        if (icon1.properties.name < icon2.properties.name) return -1;else if (icon1.properties.name < icon2.properties.name) return 1;else return 0;\n      });\n      this.icons = data;\n    });\n  },\n\n  computed: {\n    filteredIcons() {\n      if (this.filter) return this.icons.filter(icon => icon.properties.name.indexOf(this.filter.toLowerCase()) > -1);else return this.icons;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoGA,eAAe;EACbA,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,IADF;MAELC,MAAM,EAAE;IAFH,CAAP;EAID,CANY;;EAObC,OAAO,GAAG;IACRC,KAAK,CAAC,iBAAD,EAAoB;MAAEC,OAAO,EAAE;QAAE,iBAAkB;MAApB;IAAX,CAApB,CAAL,CAAwEC,IAAxE,CAA6EC,GAAE,IAAKA,GAAG,CAACC,IAAJ,EAApF,EACKF,IADL,CACUG,KAAK;MACT,IAAIR,KAAI,GAAIQ,CAAC,CAACR,KAAd;MACA,IAAID,IAAG,GAAIC,KAAK,CAACC,MAAN,CAAaQ,KAAI,IAAK;QAC/B,OAAOA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,OAAhB,CAAwB,WAAxB,MAAyC,CAAC,CAAjD;MACD,CAFU,CAAX;MAGAb,IAAI,CAACc,IAAL,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;QAC1B,IAAGD,KAAK,CAACE,UAAN,CAAiBC,IAAjB,GAAwBF,KAAK,CAACC,UAAN,CAAiBC,IAA5C,EACE,OAAO,CAAC,CAAR,CADF,KAEK,IAAGH,KAAK,CAACE,UAAN,CAAiBC,IAAjB,GAAwBF,KAAK,CAACC,UAAN,CAAiBC,IAA5C,EACH,OAAO,CAAP,CADG,KAGH,OAAO,CAAP;MACH,CAPD;MASA,KAAKjB,KAAL,GAAaD,IAAb;IACD,CAhBL;EAiBD,CAzBY;;EA0BbmB,QAAQ,EAAE;IACRC,aAAa,GAAG;MACd,IAAI,KAAKlB,MAAT,EACE,OAAO,KAAKD,KAAL,CAAWC,MAAX,CAAkBS,IAAG,IAAKA,IAAI,CAACM,UAAL,CAAgBC,IAAhB,CAAqBL,OAArB,CAA6B,KAAKX,MAAL,CAAYmB,WAAZ,EAA7B,IAA0D,CAAC,CAArF,CAAP,CADF,KAGE,OAAO,KAAKpB,KAAZ;IACJ;;EANQ;AA1BG,CAAf","names":["data","icons","filter","mounted","fetch","headers","then","res","json","d","value","icon","tags","indexOf","sort","icon1","icon2","properties","name","computed","filteredIcons","toLowerCase"],"sourceRoot":"","sources":["D:\\0. TaiPT\\2.Vue JS\\sakai-vue\\src\\components\\IconDemo.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"card\">\r\n      <h3>Icons</h3>\r\n      <p>PrimeVue components internally use <a href=\"https://github.com/primefaces/primeicons\" class=\"font-medium\">PrimeIcons</a> library, the official icons suite from <a href=\"https://www.primetek.com.tr\" class=\"font-medium\">PrimeTek</a>.</p>\r\n\r\n      <h5>Download</h5>\r\n      <p>PrimeIcons is available at npm, run the following command to download it to your project.</p>\r\n\r\n      <pre v-code><code>\r\nnpm install primeicons --save\r\n\r\n</code></pre>\r\n\r\n      <h5>Getting Started</h5>\r\n      <p>PrimeIcons use the <strong>pi pi-&#123;icon&#125;</strong> syntax such as <strong>pi pi-check</strong>.\r\n        A standalone icon can be displayed using an element like <i>i</i> or <i>span</i></p>\r\n\r\n      <pre v-code><code>\r\n&lt;i class=\"pi pi-check\"&gt;&lt;/i&gt;\r\n&lt;i class=\"pi pi-times\"&gt;&lt;/i&gt;\r\n\r\n</code></pre>\r\n\r\n      <i class=\"pi pi-check\" style=\"margin-right: .5rem\"></i>\r\n      <i class=\"pi pi-times\"></i>\r\n\r\n      <h5>Size</h5>\r\n      <p>Size of the icons can easily be changed using font-size property.</p>\r\n\r\n      <pre v-code><code>\r\n&lt;i class=\"pi pi-check\"&gt;&lt;/i&gt;\r\n\r\n</code></pre>\r\n\r\n      <i class=\"pi pi-check\"></i>\r\n\r\n      <pre v-code><code>\r\n&lt;i class=\"pi pi-check\" style=\"font-size: 2rem\"&gt;&lt;/i&gt;\r\n\r\n</code></pre>\r\n\r\n      <i class=\"pi pi-check\" style=\"font-size: 2rem\"></i>\r\n\r\n      <h5>Spinning Animation</h5>\r\n      <p>Special pi-spin class applies continuous rotation to an icon.</p>\r\n      <pre v-code><code>\r\n&lt;i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2rem\"&gt;&lt;/i&gt;\r\n\r\n</code></pre>\r\n\r\n      <i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2rem\"></i>\r\n\r\n      <h5>Constants</h5>\r\n      <p>PrimeIcons constants API is provided to easily choose an icon with typescript e.g. when defining a menu model.</p>\r\n      <pre v-code><code>\r\n&lt;Menu :model=\"items\" /&gt;\r\n\r\n</code></pre>\r\n\r\n      <pre v-code.script><code>\r\nimport {PrimeIcons} from 'primevue/api';\r\n\r\nexport default {\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\titems: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Update',\r\n\t\t\t\t\ticon: PrimeIcons.REFRESH,\r\n                    to: '/update'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Delete',\r\n\t\t\t\t\ticon: PrimeIcons.TIMES,\r\n                    to: '/delete'\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n}\r\n\r\n</code></pre>\r\n\r\n      <h5>List of Icons</h5>\r\n      <p>Here is the current list of PrimeIcons, more icons are added periodically. You may also <a href=\"https://github.com/primefaces/primeicons/issues\" class=\"font-medium\">request new icons</a> at the issue tracker.</p>\r\n\r\n      <InputText v-model=\"filter\" class=\"w-full p-3 mt-3 mb-5\" placeholder=\"Search an icon\" />\r\n\r\n      <div class=\"grid icons-list text-center\">\r\n        <div class=\"col-6 sm:col-4 lg:col-3 xl:col-2 pb-5\" v-for=\"icon of filteredIcons\" :key=\"icon.properties.name\">\r\n          <i :class=\"'text-2xl mb-2 pi pi-' + icon.properties.name\"></i>\r\n          <div>pi-{{icon.properties.name}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      icons: null,\r\n      filter: null\r\n    }\r\n  },\r\n  mounted() {\r\n    fetch('data/icons.json', { headers: { 'Cache-Control' : 'no-cache' } }).then(res => res.json())\r\n        .then(d => {\r\n          let icons = d.icons;\r\n          let data = icons.filter(value => {\r\n            return value.icon.tags.indexOf('deprecate') === -1;\r\n          });\r\n          data.sort((icon1, icon2) => {\r\n            if(icon1.properties.name < icon2.properties.name)\r\n              return -1;\r\n            else if(icon1.properties.name < icon2.properties.name)\r\n              return 1;\r\n            else\r\n              return 0;\r\n          });\r\n\r\n          this.icons = data;\r\n        });\r\n  },\r\n  computed: {\r\n    filteredIcons() {\r\n      if (this.filter)\r\n        return this.icons.filter(icon => icon.properties.name.indexOf(this.filter.toLowerCase()) > -1);\r\n      else\r\n        return this.icons;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../assets/demo/documentation.scss';\r\n\r\n.icons-list {\r\n  i {\r\n    color: var(--text-color-secondary);\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}