{"ast":null,"code":"import { useI18n } from 'vue-i18n';\nimport { FilterMatchMode } from 'primevue/api';\nimport ProductService from '../../../service/ProductService';\nexport default {\n  setup() {\n    const {\n      t\n    } = useI18n();\n    return {\n      t\n    };\n  },\n\n  data() {\n    return {\n      statusOptions: [{\n        status: 'Đang hoạt động',\n        code: '1'\n      }, {\n        status: 'Không hoạt động',\n        code: '2'\n      }],\n      statusOption: null,\n      products: null,\n      productDialog: false,\n      deleteProductDialog: false,\n      deleteProductsDialog: false,\n      product: {},\n      selectedProducts: null,\n      filters: {},\n      submitted: false,\n      statuses: [{\n        label: 'INSTOCK',\n        value: 'instock'\n      }, {\n        label: 'LOWSTOCK',\n        value: 'lowstock'\n      }, {\n        label: 'OUTOFSTOCK',\n        value: 'outofstock'\n      }]\n    };\n  },\n\n  productService: null,\n\n  created() {\n    this.productService = new ProductService();\n    this.initFilters();\n  },\n\n  mounted() {\n    this.productService.getProducts().then(data => this.products = data);\n  },\n\n  methods: {\n    openNew1() {\n      this.$router.push({\n        name: 'CreateUser'\n      });\n    },\n\n    formatCurrency(value) {\n      if (value) return value.toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD'\n      });\n      return;\n    },\n\n    openNew() {\n      this.product = {};\n      this.submitted = false;\n      this.productDialog = true;\n    },\n\n    hideDialog() {\n      this.productDialog = false;\n      this.submitted = false;\n    },\n\n    saveProduct() {\n      this.submitted = true;\n\n      if (this.product.name.trim()) {\n        if (this.product.id) {\n          this.product.inventoryStatus = this.product.inventoryStatus.value ? this.product.inventoryStatus.value : this.product.inventoryStatus;\n          this.products[this.findIndexById(this.product.id)] = this.product;\n          this.$toast.add({\n            severity: 'success',\n            summary: 'Successful',\n            detail: 'Product Updated',\n            life: 3000\n          });\n        } else {\n          this.product.id = this.createId();\n          this.product.code = this.createId();\n          this.product.image = 'product-placeholder.svg';\n          this.product.inventoryStatus = this.product.inventoryStatus ? this.product.inventoryStatus.value : 'INSTOCK';\n          this.products.push(this.product);\n          this.$toast.add({\n            severity: 'success',\n            summary: 'Successful',\n            detail: 'Product Created',\n            life: 3000\n          });\n        }\n\n        this.productDialog = false;\n        this.product = {};\n      }\n    },\n\n    editProduct(product) {\n      this.product = { ...product\n      };\n      this.productDialog = true;\n    },\n\n    confirmDeleteProduct(product) {\n      this.product = product;\n      this.deleteProductDialog = true;\n    },\n\n    deleteProduct() {\n      this.products = this.products.filter(val => val.id !== this.product.id);\n      this.deleteProductDialog = false;\n      this.product = {};\n      this.$toast.add({\n        severity: 'success',\n        summary: 'Successful',\n        detail: 'Product Deleted',\n        life: 3000\n      });\n    },\n\n    findIndexById(id) {\n      let index = -1;\n\n      for (let i = 0; i < this.products.length; i++) {\n        if (this.products[i].id === id) {\n          index = i;\n          break;\n        }\n      }\n\n      return index;\n    },\n\n    createId() {\n      let id = '';\n      var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n      for (var i = 0; i < 5; i++) {\n        id += chars.charAt(Math.floor(Math.random() * chars.length));\n      }\n\n      return id;\n    },\n\n    exportCSV() {\n      this.$refs.dt.exportCSV();\n    },\n\n    confirmDeleteSelected() {\n      this.deleteProductsDialog = true;\n    },\n\n    deleteSelectedProducts() {\n      this.products = this.products.filter(val => !this.selectedProducts.includes(val));\n      this.deleteProductsDialog = false;\n      this.selectedProducts = null;\n      this.$toast.add({\n        severity: 'success',\n        summary: 'Successful',\n        detail: 'Products Deleted',\n        life: 3000\n      });\n    },\n\n    initFilters() {\n      this.filters = {\n        'global': {\n          value: null,\n          matchMode: FilterMatchMode.CONTAINS\n        }\n      };\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["useI18n","FilterMatchMode","ProductService","setup","t","data","statusOptions","status","code","statusOption","products","productDialog","deleteProductDialog","deleteProductsDialog","product","selectedProducts","filters","submitted","statuses","label","value","productService","created","initFilters","mounted","getProducts","then","methods","openNew1","$router","push","name","formatCurrency","toLocaleString","style","currency","openNew","hideDialog","saveProduct","trim","id","inventoryStatus","findIndexById","$toast","add","severity","summary","detail","life","createId","image","editProduct","confirmDeleteProduct","deleteProduct","filter","val","index","i","length","chars","charAt","Math","floor","random","exportCSV","$refs","dt","confirmDeleteSelected","deleteSelectedProducts","includes","matchMode","CONTAINS"],"sourceRoot":"","sources":["D:\\0. TaiPT\\2.Vue JS\\sakai-vue\\src\\view\\system-management\\user\\UserManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n\r\n            <Accordion  class=\"mb-4\">\r\n              <AccordionTab :header=\"t('advancedSearch')\">\r\n                  <div class=\"p-fluid\">\r\n                    <div class=\"formgrid grid\">\r\n                      <div class=\"field col\">\r\n                        <label for=\"username\">{{ this.$t(\"user.properties.username\") }}</label>\r\n                        <inputText id=\"username\" type=\"text\"/>\r\n                      </div>\r\n                      <div class=\"field col\">\r\n                        <label for=\"fullname\">{{ this.$t(\"user.properties.fullname\") }}</label>\r\n                        <inputText id=\"fullname\" type=\"text\"/>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"formgrid grid\">\r\n                      <div class=\"field col\">\r\n                        <label for=\"email\">{{ this.$t(\"user.properties.email\") }}</label>\r\n                        <inputText id=\"email\" type=\"text\"/>\r\n                      </div>\r\n                      <div class=\"field col\">\r\n                        <label for=\"searchStatus\">{{ this.$t(\"user.properties.status\") }}</label>\r\n                        <Dropdown\r\n                            id=\"searchStatus\"\r\n                            v-model=\"statusOption\"\r\n                            optionLabel=\"status\"\r\n                            :options=\"statusOptions\"\r\n                            :placeholder=\"t('select')\"></Dropdown>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"grid justify-content-center mt-5\">\r\n                    <Button type=\"button\" class=\"ml-3\" :label=\"t('search')\" icon=\"pi pi-search\"/>\r\n                  </div>\r\n              </AccordionTab>\r\n            </Accordion>\r\n\r\n            <toolbar class=\"mb-4\">\r\n              <template v-slot:start>\r\n                <div class=\"my-2\">\r\n                  <Button type=\"button\" :label=\"t('create')\" class=\"p-button-success mr-2\" icon=\"pi pi-plus\" @click=\"openNew1\"/>\r\n                  <Button type=\"button\" :label=\"t('delete')\" class=\"p-button-danger\" icon=\"pi pi-trash\"/>\r\n                </div>\r\n              </template>\r\n              <template v-slot:end>\r\n                <div class=\"my-2\">\r\n                  <Button type=\"button\" :label=\"t('import')\" class=\"inline-block mr-2\" icon=\"pi pi-plus\"/>\r\n                  <Button type=\"button\" :label=\"t('export')\" class=\"p-button-help\" icon=\"pi pi-upload\"/>\r\n                </div>\r\n              </template>\r\n            </toolbar>\r\n          </div>\r\n\r\n        <DataTable ref=\"dt\" value=\"products\" selection=\"selectedProducts\" dataKey=\"id\" paginator=\"true\" rows=\"10\" filters=\"filters\"\r\n                   paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" :rowsPerPageOptions=\"[5,10,25]\"\r\n                   currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\" responsiveLayout=\"scroll\">\r\n          <template #header>\r\n            <div class=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n              <h5 class=\"m-0\">{{ $t('components.UserManagement') }}</h5>\r\n              <span class=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                                <i class=\"pi pi-search\" />\r\n                                <InputText :placeholder=\"t('user.searchText')\" />\r\n                            </span>\r\n            </div>\r\n          </template>\r\n\r\n          <Column selectionMode=\"multiple\" headerStyle=\"width: 3rem\"></Column>\r\n          <Column field=\"fullname\" :header=\"t('user.properties.fullname')\" :sortable=\"true\" headerStyle=\"min-width:10rem;\">\r\n            <template #body=\"slotProps\">\r\n              <span class=\"p-column-title\"></span>\r\n              {{slotProps.data.code}}\r\n            </template>\r\n          </Column>\r\n          <Column field=\"username\" :header=\"t('user.properties.username')\" :sortable=\"true\" headerStyle=\"min-width:10rem;\">\r\n            <template #body=\"slotProps\">\r\n              <span class=\"p-column-title\">Tên đăng nhập</span>\r\n              {{slotProps.data.name}}\r\n            </template>\r\n          </Column>\r\n          <Column field=\"email\" :header=\"t('user.properties.email')\" :sortable=\"true\" headerStyle=\"min-width:8rem;\">\r\n            <template #body=\"slotProps\">\r\n              <span class=\"p-column-title\">Hộp thư</span>\r\n            </template>\r\n          </Column>\r\n          <Column field=\"status\" :header=\"t('user.properties.status')\" :sortable=\"true\" headerStyle=\"min-width:10rem;\">\r\n            <template #body=\"slotProps\">\r\n              <span class=\"p-column-title\">Status</span>\r\n              <span :class=\"'product-badge status-' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : '')\">{{slotProps.data.inventoryStatus}}</span>\r\n            </template>\r\n          </Column>\r\n        </DataTable>\r\n\r\n\r\n      <DataTable ref=\"dt\" :value=\"products\" v-model:selection=\"selectedProducts\" dataKey=\"id\" :paginator=\"true\" :rows=\"10\" :filters=\"filters\"\r\n                 paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" :rowsPerPageOptions=\"[5,10,25]\"\r\n                 currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\" responsiveLayout=\"scroll\">\r\n        <template #header>\r\n          <div class=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n            <h5 class=\"m-0\">Manage Products</h5>\r\n            <span class=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                                <i class=\"pi pi-search\" />\r\n                                <InputText v-model=\"filters['global'].value\" placeholder=\"Search...\" />\r\n                            </span>\r\n          </div>\r\n        </template>\r\n\r\n        <Column selectionMode=\"multiple\" headerStyle=\"width: 3rem\"></Column>\r\n        <Column field=\"code\" header=\"Code\" :sortable=\"true\" headerStyle=\"width:14%; min-width:10rem;\">\r\n          <template #body=\"slotProps\">\r\n            <span class=\"p-column-title\">Code</span>\r\n            {{slotProps.data.code}}\r\n          </template>\r\n        </Column>\r\n        <Column field=\"name\" header=\"Name\" :sortable=\"true\" headerStyle=\"width:14%; min-width:10rem;\">\r\n          <template #body=\"slotProps\">\r\n            <span class=\"p-column-title\">Name</span>\r\n            {{slotProps.data.name}}\r\n          </template>\r\n        </Column>\r\n        <Column field=\"price\" header=\"Price\" :sortable=\"true\" headerStyle=\"width:14%; min-width:8rem;\">\r\n          <template #body=\"slotProps\">\r\n            <span class=\"p-column-title\">Price</span>\r\n            {{formatCurrency(slotProps.data.price)}}\r\n          </template>\r\n        </Column>\r\n        <Column field=\"category\" header=\"Category\" :sortable=\"true\" headerStyle=\"width:14%; min-width:10rem;\">\r\n          <template #body=\"slotProps\">\r\n            <span class=\"p-column-title\">Category</span>\r\n            {{formatCurrency(slotProps.data.category)}}\r\n          </template>\r\n        </Column>\r\n        <Column field=\"inventoryStatus\" header=\"Status\" :sortable=\"true\" headerStyle=\"width:14%; min-width:10rem;\">\r\n          <template #body=\"slotProps\">\r\n            <span class=\"p-column-title\">Status</span>\r\n            <span :class=\"'product-badge status-' + (slotProps.data.inventoryStatus ? slotProps.data.inventoryStatus.toLowerCase() : '')\">{{slotProps.data.inventoryStatus}}</span>\r\n          </template>\r\n        </Column>\r\n        <Column headerStyle=\"min-width:10rem;\">\r\n          <template #body=\"slotProps\">\r\n            <Button icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success mr-2\" @click=\"editProduct(slotProps.data)\" />\r\n            <Button icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning mt-2\" @click=\"confirmDeleteProduct(slotProps.data)\" />\r\n          </template>\r\n        </Column>\r\n      </DataTable>\r\n\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport {useI18n} from 'vue-i18n';\r\nimport {FilterMatchMode} from 'primevue/api';\r\nimport ProductService from '../../../service/ProductService';\r\n\r\nexport default {\r\n  setup() {\r\n      const {t} = useI18n();\r\n      return {t}\r\n  },\r\n  data() {\r\n    return {\r\n      statusOptions: [\r\n        {status: 'Đang hoạt động', code: '1'},\r\n        {status: 'Không hoạt động', code: '2'}\r\n      ],\r\n      statusOption: null,\r\n      products: null,\r\n      productDialog: false,\r\n      deleteProductDialog: false,\r\n      deleteProductsDialog: false,\r\n      product: {},\r\n      selectedProducts: null,\r\n      filters: {},\r\n      submitted: false,\r\n      statuses: [\r\n        {label: 'INSTOCK', value: 'instock'},\r\n        {label: 'LOWSTOCK', value: 'lowstock'},\r\n        {label: 'OUTOFSTOCK', value: 'outofstock'}\r\n      ]\r\n    }\r\n  },\r\n  productService: null,\r\n  created() {\r\n    this.productService = new ProductService();\r\n    this.initFilters();\r\n  },\r\n  mounted() {\r\n    this.productService.getProducts().then(data => this.products = data);\r\n  },\r\n  methods: {\r\n    openNew1() {\r\n      this.$router.push({\r\n        name: 'CreateUser'\r\n      })\r\n    },\r\n    formatCurrency(value) {\r\n      if(value)\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n      return;\r\n    },\r\n    openNew() {\r\n      this.product = {};\r\n      this.submitted = false;\r\n      this.productDialog = true;\r\n\r\n    },\r\n    hideDialog() {\r\n      this.productDialog = false;\r\n      this.submitted = false;\r\n    },\r\n    saveProduct() {\r\n      this.submitted = true;\r\n      if (this.product.name.trim()) {\r\n        if (this.product.id) {\r\n          this.product.inventoryStatus = this.product.inventoryStatus.value ? this.product.inventoryStatus.value: this.product.inventoryStatus;\r\n          this.products[this.findIndexById(this.product.id)] = this.product;\r\n          this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Updated', life: 3000});\r\n        }\r\n        else {\r\n          this.product.id = this.createId();\r\n          this.product.code = this.createId();\r\n          this.product.image = 'product-placeholder.svg';\r\n          this.product.inventoryStatus = this.product.inventoryStatus ? this.product.inventoryStatus.value : 'INSTOCK';\r\n          this.products.push(this.product);\r\n          this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Created', life: 3000});\r\n        }\r\n        this.productDialog = false;\r\n        this.product = {};\r\n      }\r\n    },\r\n    editProduct(product) {\r\n      this.product = {...product};\r\n      this.productDialog = true;\r\n    },\r\n    confirmDeleteProduct(product) {\r\n      this.product = product;\r\n      this.deleteProductDialog = true;\r\n    },\r\n    deleteProduct() {\r\n      this.products = this.products.filter(val => val.id !== this.product.id);\r\n      this.deleteProductDialog = false;\r\n      this.product = {};\r\n      this.$toast.add({severity:'success', summary: 'Successful', detail: 'Product Deleted', life: 3000});\r\n    },\r\n    findIndexById(id) {\r\n      let index = -1;\r\n      for (let i = 0; i < this.products.length; i++) {\r\n        if (this.products[i].id === id) {\r\n          index = i;\r\n          break;\r\n        }\r\n      }\r\n      return index;\r\n    },\r\n    createId() {\r\n      let id = '';\r\n      var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n      for ( var i = 0; i < 5; i++ ) {\r\n        id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n      }\r\n      return id;\r\n    },\r\n    exportCSV() {\r\n      this.$refs.dt.exportCSV();\r\n    },\r\n    confirmDeleteSelected() {\r\n      this.deleteProductsDialog = true;\r\n    },\r\n    deleteSelectedProducts() {\r\n      this.products = this.products.filter(val => !this.selectedProducts.includes(val));\r\n      this.deleteProductsDialog = false;\r\n      this.selectedProducts = null;\r\n      this.$toast.add({severity:'success', summary: 'Successful', detail: 'Products Deleted', life: 3000});\r\n    },\r\n    initFilters() {\r\n      this.filters = {\r\n        'global': {value: null, matchMode: FilterMatchMode.CONTAINS},\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}