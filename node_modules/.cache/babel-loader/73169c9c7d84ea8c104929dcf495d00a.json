{"ast":null,"code":"import ProductService from \"../service/ProductService\";\nexport default {\n  data() {\n    return {\n      picklistValue: [[{\n        name: 'San Francisco',\n        code: 'SF'\n      }, {\n        name: 'London',\n        code: 'LDN'\n      }, {\n        name: 'Paris',\n        code: 'PRS'\n      }, {\n        name: 'Istanbul',\n        code: 'IST'\n      }, {\n        name: 'Berlin',\n        code: 'BRL'\n      }, {\n        name: 'Barcelona',\n        code: 'BRC'\n      }, {\n        name: 'Rome',\n        code: 'RM'\n      }], []],\n      orderlistValue: [{\n        name: 'San Francisco',\n        code: 'SF'\n      }, {\n        name: 'London',\n        code: 'LDN'\n      }, {\n        name: 'Paris',\n        code: 'PRS'\n      }, {\n        name: 'Istanbul',\n        code: 'IST'\n      }, {\n        name: 'Berlin',\n        code: 'BRL'\n      }, {\n        name: 'Barcelona',\n        code: 'BRC'\n      }, {\n        name: 'Rome',\n        code: 'RM'\n      }],\n      dataviewValue: null,\n      layout: 'grid',\n      sortKey: null,\n      sortOrder: null,\n      sortField: null,\n      sortOptions: [{\n        label: 'Price High to Low',\n        value: '!price'\n      }, {\n        label: 'Price Low to High',\n        value: 'price'\n      }]\n    };\n  },\n\n  productService: null,\n\n  created() {\n    this.productService = new ProductService();\n  },\n\n  mounted() {\n    this.productService.getProducts().then(data => this.dataviewValue = data);\n  },\n\n  methods: {\n    onSortChange(event) {\n      const value = event.value.value;\n      const sortValue = event.value;\n\n      if (value.indexOf('!') === 0) {\n        this.sortOrder = -1;\n        this.sortField = value.substring(1, value.length);\n        this.sortKey = sortValue;\n      } else {\n        this.sortOrder = 1;\n        this.sortField = value;\n        this.sortKey = sortValue;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoGA,OAAOA,cAAP,MAA2B,2BAA3B;AAEA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,aAAa,EAAE,CAAC,CACd;QAACC,IAAI,EAAE,eAAP;QAAwBC,IAAI,EAAE;MAA9B,CADc,EAEd;QAACD,IAAI,EAAE,QAAP;QAAiBC,IAAI,EAAE;MAAvB,CAFc,EAGd;QAACD,IAAI,EAAE,OAAP;QAAgBC,IAAI,EAAE;MAAtB,CAHc,EAId;QAACD,IAAI,EAAE,UAAP;QAAmBC,IAAI,EAAE;MAAzB,CAJc,EAKd;QAACD,IAAI,EAAE,QAAP;QAAiBC,IAAI,EAAE;MAAvB,CALc,EAMd;QAACD,IAAI,EAAE,WAAP;QAAoBC,IAAI,EAAE;MAA1B,CANc,EAOd;QAACD,IAAI,EAAE,MAAP;QAAeC,IAAI,EAAE;MAArB,CAPc,CAAD,EAQb,EARa,CADV;MAULC,cAAc,EAAE,CACd;QAACF,IAAI,EAAE,eAAP;QAAwBC,IAAI,EAAE;MAA9B,CADc,EAEd;QAACD,IAAI,EAAE,QAAP;QAAiBC,IAAI,EAAE;MAAvB,CAFc,EAGd;QAACD,IAAI,EAAE,OAAP;QAAgBC,IAAI,EAAE;MAAtB,CAHc,EAId;QAACD,IAAI,EAAE,UAAP;QAAmBC,IAAI,EAAE;MAAzB,CAJc,EAKd;QAACD,IAAI,EAAE,QAAP;QAAiBC,IAAI,EAAE;MAAvB,CALc,EAMd;QAACD,IAAI,EAAE,WAAP;QAAoBC,IAAI,EAAE;MAA1B,CANc,EAOd;QAACD,IAAI,EAAE,MAAP;QAAeC,IAAI,EAAE;MAArB,CAPc,CAVX;MAmBLE,aAAa,EAAE,IAnBV;MAoBLC,MAAM,EAAE,MApBH;MAqBLC,OAAO,EAAE,IArBJ;MAsBLC,SAAS,EAAE,IAtBN;MAuBLC,SAAS,EAAE,IAvBN;MAwBLC,WAAW,EAAE,CACX;QAACC,KAAK,EAAE,mBAAR;QAA6BC,KAAK,EAAE;MAApC,CADW,EAEX;QAACD,KAAK,EAAE,mBAAR;QAA6BC,KAAK,EAAE;MAApC,CAFW;IAxBR,CAAP;EA6BD,CA/BY;;EAgCbC,cAAc,EAAE,IAhCH;;EAiCbC,OAAO,GAAG;IACR,KAAKD,cAAL,GAAsB,IAAId,cAAJ,EAAtB;EACD,CAnCY;;EAoCbgB,OAAO,GAAG;IACR,KAAKF,cAAL,CAAoBG,WAApB,GAAkCC,IAAlC,CAAuCjB,IAAG,IAAK,KAAKK,aAAL,GAAqBL,IAApE;EACD,CAtCY;;EAuCbkB,OAAO,EAAE;IACPC,YAAY,CAACC,KAAD,EAAO;MACjB,MAAMR,KAAI,GAAIQ,KAAK,CAACR,KAAN,CAAYA,KAA1B;MACA,MAAMS,SAAQ,GAAID,KAAK,CAACR,KAAxB;;MAEA,IAAIA,KAAK,CAACU,OAAN,CAAc,GAAd,MAAuB,CAA3B,EAA8B;QAC5B,KAAKd,SAAL,GAAiB,CAAC,CAAlB;QACA,KAAKC,SAAL,GAAiBG,KAAK,CAACW,SAAN,CAAgB,CAAhB,EAAmBX,KAAK,CAACY,MAAzB,CAAjB;QACA,KAAKjB,OAAL,GAAec,SAAf;MACF,CAJA,MAKK;QACH,KAAKb,SAAL,GAAiB,CAAjB;QACA,KAAKC,SAAL,GAAiBG,KAAjB;QACA,KAAKL,OAAL,GAAec,SAAf;MACF;IACF;;EAfO;AAvCI,CAAf","names":["ProductService","data","picklistValue","name","code","orderlistValue","dataviewValue","layout","sortKey","sortOrder","sortField","sortOptions","label","value","productService","created","mounted","getProducts","then","methods","onSortChange","event","sortValue","indexOf","substring","length"],"sourceRoot":"","sources":["D:\\0. TaiPT\\2.Vue JS\\sakai-vue\\src\\components\\ListDemo.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <h5>DataView</h5>\r\n        <DataView :value=\"dataviewValue\" :layout=\"layout\" :paginator=\"true\" :rows=\"9\" :sortOrder=\"sortOrder\" :sortField=\"sortField\">\r\n          <template #header>\r\n            <div class=\"grid grid-nogutter\">\r\n              <div class=\"col-6 text-left\">\r\n                <Dropdown v-model=\"sortKey\" :options=\"sortOptions\" optionLabel=\"label\" placeholder=\"Sort By Price\" @change=\"onSortChange($event)\"/>\r\n              </div>\r\n              <div class=\"col-6 text-right\">\r\n                <DataViewLayoutOptions v-model=\"layout\" />\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <template #list=\"slotProps\">\r\n            <div class=\"col-12\">\r\n              <div class=\"flex flex-column md:flex-row align-items-center p-3 w-full\">\r\n                <img :src=\"'images/product/' + slotProps.data.image\" :alt=\"slotProps.data.name\" class=\"my-4 md:my-0 w-9 md:w-10rem shadow-2 mr-5\" />\r\n                <div class=\"flex-1 text-center md:text-left\">\r\n                  <div class=\"font-bold text-2xl\">{{slotProps.data.name}}</div>\r\n                  <div class=\"mb-3\">{{slotProps.data.description}}</div>\r\n                  <Rating :modelValue=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\" class=\"mb-2\"></Rating>\r\n                  <div class=\"flex align-items-center\">\r\n                    <i class=\"pi pi-tag mr-2\"></i>\r\n                    <span class=\"font-semibold\">{{slotProps.data.category}}</span>\r\n                  </div>\r\n\r\n                </div>\r\n                <div class=\"flex flex-row md:flex-column justify-content-between w-full md:w-auto align-items-center md:align-items-end mt-5 md:mt-0\">\r\n                  <span class=\"text-2xl font-semibold mb-2 align-self-center md:align-self-end\">${{slotProps.data.price}}</span>\r\n                  <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" :disabled=\"slotProps.data.inventoryStatus === 'OUTOFSTOCK'\" class=\"mb-2\"></Button>\r\n                  <span :class=\"'product-badge status-'+slotProps.data.inventoryStatus.toLowerCase()\">{{slotProps.data.inventoryStatus}}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </template>\r\n\r\n          <template #grid=\"slotProps\">\r\n            <div class=\"col-12 md:col-4\">\r\n              <div class=\"card m-3 border-1 surface-border\">\r\n                <div class=\"flex align-items-center justify-content-between\">\r\n                  <div class=\"flex align-items-center\">\r\n                    <i class=\"pi pi-tag mr-2\"></i>\r\n                    <span class=\"font-semibold\">{{slotProps.data.category}}</span>\r\n                  </div>\r\n                  <span :class=\"'product-badge status-'+slotProps.data.inventoryStatus.toLowerCase()\">{{slotProps.data.inventoryStatus}}</span>\r\n                </div>\r\n                <div class=\"text-center\">\r\n                  <img :src=\"'images/product/' + slotProps.data.image\" :alt=\"slotProps.data.name\" class=\"w-9 shadow-2 my-3 mx-0\"/>\r\n                  <div class=\"text-2xl font-bold\">{{slotProps.data.name}}</div>\r\n                  <div class=\"mb-3\">{{slotProps.data.description}}</div>\r\n                  <Rating :modelValue=\"slotProps.data.rating\" :readonly=\"true\" :cancel=\"false\"></Rating>\r\n                </div>\r\n                <div class=\"flex align-items-center justify-content-between\">\r\n                  <span class=\"text-2xl font-semibold\">${{slotProps.data.price}}</span>\r\n                  <Button icon=\"pi pi-shopping-cart\" :disabled=\"slotProps.data.inventoryStatus === 'OUTOFSTOCK'\"></Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </DataView>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 lg:col-8\">\r\n      <div class=\"card\">\r\n        <h5>PickList</h5>\r\n        <PickList v-model=\"picklistValue\" listStyle=\"height:250px\" dataKey=\"code\">\r\n          <template #sourceheader>\r\n            From\r\n          </template>\r\n          <template #targetheader>\r\n            To\r\n          </template>\r\n          <template #item=\"slotProps\">\r\n            <div>{{slotProps.item.name}}</div>\r\n          </template>\r\n        </PickList>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 lg:col-4\">\r\n      <div class=\"card\">\r\n        <h5>OrderList</h5>\r\n        <OrderList v-model=\"orderlistValue\" listStyle=\"height:250px\" dataKey=\"code\" :rows=\"10\">\r\n          <template #header>\r\n            Cities\r\n          </template>\r\n          <template #item=\"slotProps\">\r\n            <div>{{slotProps.item.name}}</div>\r\n          </template>\r\n        </OrderList>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductService from \"../service/ProductService\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      picklistValue: [[\r\n        {name: 'San Francisco', code: 'SF'},\r\n        {name: 'London', code: 'LDN'},\r\n        {name: 'Paris', code: 'PRS'},\r\n        {name: 'Istanbul', code: 'IST'},\r\n        {name: 'Berlin', code: 'BRL'},\r\n        {name: 'Barcelona', code: 'BRC'},\r\n        {name: 'Rome', code: 'RM'},\r\n      ],[]],\r\n      orderlistValue: [\r\n        {name: 'San Francisco', code: 'SF'},\r\n        {name: 'London', code: 'LDN'},\r\n        {name: 'Paris', code: 'PRS'},\r\n        {name: 'Istanbul', code: 'IST'},\r\n        {name: 'Berlin', code: 'BRL'},\r\n        {name: 'Barcelona', code: 'BRC'},\r\n        {name: 'Rome', code: 'RM'},\r\n      ],\r\n      dataviewValue: null,\r\n      layout: 'grid',\r\n      sortKey: null,\r\n      sortOrder: null,\r\n      sortField: null,\r\n      sortOptions: [\r\n        {label: 'Price High to Low', value: '!price'},\r\n        {label: 'Price Low to High', value: 'price'},\r\n      ]\r\n    }\r\n  },\r\n  productService: null,\r\n  created() {\r\n    this.productService = new ProductService();\r\n  },\r\n  mounted() {\r\n    this.productService.getProducts().then(data => this.dataviewValue = data);\r\n  },\r\n  methods: {\r\n    onSortChange(event){\r\n      const value = event.value.value;\r\n      const sortValue = event.value;\r\n\r\n      if (value.indexOf('!') === 0) {\r\n        this.sortOrder = -1;\r\n        this.sortField = value.substring(1, value.length);\r\n        this.sortKey = sortValue;\r\n      }\r\n      else {\r\n        this.sortOrder = 1;\r\n        this.sortField = value;\r\n        this.sortKey = sortValue;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import '../assets/demo/badges.scss';\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}