{"ast":null,"code":"import authApi from \"../../api/authApi\";\nimport { GATEWAY_URL } from \"../../api/configService\";\nexport default {\n  namespaced: true,\n  state: {\n    user: null,\n    authorization: null,\n    refreshToken: null\n  },\n  getters: {\n    isAdmin(state) {\n      return state.user && state.user.roles && state.user.roles.some(role => role.roleCode === \"ADMIN\");\n    },\n\n    getAvatarUrl(state) {\n      return state.user && state.user.avatar ? GATEWAY_URL + `/files/preview/${state.user.avatar}`.replaceAll('\\\\', '/').replaceAll('\\/\\/', '/') : '';\n    }\n\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n    },\n\n    setAuthorization(state, authorization) {\n      state.authorization = authorization;\n    },\n\n    setRefreshToken(state, token) {\n      state.refreshToken = token;\n    }\n\n  },\n  actions: {\n    setUserAndLocate(context, {\n      user,\n      locate\n    }) {\n      context.commit('setLocate', locate, {\n        root: true\n      });\n      context.commit('setUser', user);\n    },\n\n    async login(context, {\n      adminLogin,\n      username,\n      password\n    }) {\n      const loginAction = adminLogin ? await authApi.adminLogin(username, password) : await authApi.login(username, password);\n      Promise.resolve(loginAction).then(data => {\n        const {\n          user,\n          tokenType,\n          accessToken,\n          refreshToken\n        } = data || {};\n        Promise.all([context.commit('setUser', user), context.commit('setAuthorization', `${tokenType} ${accessToken}`), context.commit('setRefreshToken', refreshToken)]);\n      });\n    },\n\n    logout(context) {\n      context.commit('setUser', null);\n      context.commit('setAuthorization', null);\n      context.dispatch('menus/clearUserMenu', null, {\n        root: true\n      });\n    },\n\n    refreshToken(context, data) {\n      context.commit('setAuthorization', `${data.tokenType} ${data.accessToken}`);\n      context.commit('setRefreshToken', data.refreshToken);\n    },\n\n    saveUserWithoutRole(context, data) {\n      if (!data.roles) {\n        let roles;\n\n        if (context.state.user && context.state.user.roles) {\n          roles = context.state.user.roles;\n        }\n\n        data.roles = roles;\n      }\n\n      context.commit('setUser', data);\n    }\n\n  }\n};","map":{"version":3,"names":["authApi","GATEWAY_URL","namespaced","state","user","authorization","refreshToken","getters","isAdmin","roles","some","role","roleCode","getAvatarUrl","avatar","replaceAll","mutations","setUser","setAuthorization","setRefreshToken","token","actions","setUserAndLocate","context","locate","commit","root","login","adminLogin","username","password","loginAction","Promise","resolve","then","data","tokenType","accessToken","all","logout","dispatch","saveUserWithoutRole"],"sources":["D:/0. TaiPT/2.Vue JS/sakai-vue/src/store/modules/auth.js"],"sourcesContent":["import authApi from \"../../api/authApi\";\r\nimport {GATEWAY_URL} from \"../../api/configService\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state: {\r\n        user: null,\r\n        authorization: null,\r\n        refreshToken: null\r\n    },\r\n    getters: {\r\n        isAdmin(state) {\r\n            return state.user && state.user.roles && state.user.roles.some(role => role.roleCode === \"ADMIN\");\r\n        },\r\n        getAvatarUrl(state) {\r\n            return state.user && state.user.avatar ? GATEWAY_URL + `/files/preview/${state.user.avatar}`\r\n                .replaceAll('\\\\', '/')\r\n                .replaceAll('\\/\\/', '/') : '';\r\n        }\r\n    },\r\n    mutations: {\r\n        setUser(state, user) {\r\n            state.user = user;\r\n        },\r\n        setAuthorization(state, authorization) {\r\n            state.authorization = authorization;\r\n        },\r\n        setRefreshToken(state, token) {\r\n            state.refreshToken = token;\r\n        }\r\n    },\r\n    actions: {\r\n        setUserAndLocate(context, {user, locate}) {\r\n            context.commit('setLocate', locate, {root: true});\r\n            context.commit('setUser', user);\r\n        },\r\n        async login(context, {adminLogin, username, password}) {\r\n            const loginAction = adminLogin ? await authApi.adminLogin(username, password) : await authApi.login(username, password);\r\n\r\n            Promise.resolve(loginAction).then(data => {\r\n                const {user, tokenType, accessToken, refreshToken} = data || {};\r\n\r\n                Promise.all([\r\n                    context.commit('setUser', user),\r\n                    context.commit('setAuthorization', `${tokenType} ${accessToken}`),\r\n                    context.commit('setRefreshToken', refreshToken),\r\n                ]);\r\n            });\r\n        },\r\n        logout(context) {\r\n            context.commit('setUser', null);\r\n            context.commit('setAuthorization', null);\r\n            context.dispatch('menus/clearUserMenu', null, {root: true});\r\n        },\r\n        refreshToken(context, data) {\r\n            context.commit('setAuthorization', `${data.tokenType} ${data.accessToken}`);\r\n            context.commit('setRefreshToken', data.refreshToken);\r\n        },\r\n        saveUserWithoutRole(context, data) {\r\n            if (!data.roles) {\r\n                let roles;\r\n                if (context.state.user && context.state.user.roles) {\r\n                    roles = context.state.user.roles\r\n                }\r\n                data.roles = roles\r\n            }\r\n            context.commit('setUser', data);\r\n        }\r\n    },\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}