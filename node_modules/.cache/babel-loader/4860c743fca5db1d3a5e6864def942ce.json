{"ast":null,"code":"import EventBus from './AppEventBus';\nexport default {\n  themeChangeListener: null,\n\n  mounted() {\n    this.themeChangeListener = event => {\n      const elementId = 'theme-link';\n      const linkElement = document.getElementById(elementId);\n      const cloneLinkElement = linkElement.cloneNode(true);\n      const newThemeUrl = linkElement.getAttribute('href').replace(this.$appState.theme, event.theme);\n      cloneLinkElement.setAttribute('id', elementId + '-clone');\n      cloneLinkElement.setAttribute('href', newThemeUrl);\n      cloneLinkElement.addEventListener('load', () => {\n        linkElement.remove();\n        cloneLinkElement.setAttribute('id', elementId);\n      });\n      linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\n      this.$appState.theme = event.theme;\n      this.$appState.darkTheme = event.dark;\n    };\n\n    EventBus.on('theme-change', this.themeChangeListener);\n  },\n\n  beforeUnmount() {\n    EventBus.off('theme-change', this.themeChangeListener);\n  }\n\n};","map":{"version":3,"mappings":"AAKA,OAAOA,QAAP,MAAqB,eAArB;AAEA,eAAe;EACbC,mBAAmB,EAAE,IADR;;EAEbC,OAAO,GAAG;IACR,KAAKD,mBAAL,GAA4BE,KAAD,IAAW;MACpC,MAAMC,SAAQ,GAAI,YAAlB;MACA,MAAMC,WAAU,GAAIC,QAAQ,CAACC,cAAT,CAAwBH,SAAxB,CAApB;MACA,MAAMI,gBAAe,GAAIH,WAAW,CAACI,SAAZ,CAAsB,IAAtB,CAAzB;MACA,MAAMC,WAAU,GAAIL,WAAW,CAACM,YAAZ,CAAyB,MAAzB,EAAiCC,OAAjC,CAAyC,KAAKC,SAAL,CAAeC,KAAxD,EAA+DX,KAAK,CAACW,KAArE,CAApB;MAEAN,gBAAgB,CAACO,YAAjB,CAA8B,IAA9B,EAAoCX,SAAQ,GAAI,QAAhD;MACAI,gBAAgB,CAACO,YAAjB,CAA8B,MAA9B,EAAsCL,WAAtC;MACAF,gBAAgB,CAACQ,gBAAjB,CAAkC,MAAlC,EAA0C,MAAM;QAC9CX,WAAW,CAACY,MAAZ;QACAT,gBAAgB,CAACO,YAAjB,CAA8B,IAA9B,EAAoCX,SAApC;MACD,CAHD;MAIAC,WAAW,CAACa,UAAZ,CAAuBC,YAAvB,CAAoCX,gBAApC,EAAsDH,WAAW,CAACe,WAAlE;MAEA,KAAKP,SAAL,CAAeC,KAAf,GAAuBX,KAAK,CAACW,KAA7B;MACA,KAAKD,SAAL,CAAeQ,SAAf,GAA2BlB,KAAK,CAACmB,IAAjC;IACD,CAhBD;;IAkBAtB,QAAQ,CAACuB,EAAT,CAAY,cAAZ,EAA4B,KAAKtB,mBAAjC;EACD,CAtBY;;EAuBbuB,aAAa,GAAG;IACdxB,QAAQ,CAACyB,GAAT,CAAa,cAAb,EAA6B,KAAKxB,mBAAlC;EACF;;AAzBa,CAAf","names":["EventBus","themeChangeListener","mounted","event","elementId","linkElement","document","getElementById","cloneLinkElement","cloneNode","newThemeUrl","getAttribute","replace","$appState","theme","setAttribute","addEventListener","remove","parentNode","insertBefore","nextSibling","darkTheme","dark","on","beforeUnmount","off"],"sourceRoot":"","sources":["D:\\0. TaiPT\\2.Vue JS\\sakai-vue\\src\\AppWrapper.vue"],"sourcesContent":["<template>\r\n  <router-view></router-view>\r\n</template>\r\n\r\n<script>\r\nimport EventBus from './AppEventBus';\r\n\r\nexport default {\r\n  themeChangeListener: null,\r\n  mounted() {\r\n    this.themeChangeListener = (event) => {\r\n      const elementId = 'theme-link';\r\n      const linkElement = document.getElementById(elementId);\r\n      const cloneLinkElement = linkElement.cloneNode(true);\r\n      const newThemeUrl = linkElement.getAttribute('href').replace(this.$appState.theme, event.theme);\r\n\r\n      cloneLinkElement.setAttribute('id', elementId + '-clone');\r\n      cloneLinkElement.setAttribute('href', newThemeUrl);\r\n      cloneLinkElement.addEventListener('load', () => {\r\n        linkElement.remove();\r\n        cloneLinkElement.setAttribute('id', elementId);\r\n      });\r\n      linkElement.parentNode.insertBefore(cloneLinkElement, linkElement.nextSibling);\r\n\r\n      this.$appState.theme = event.theme;\r\n      this.$appState.darkTheme = event.dark;\r\n    };\r\n\r\n    EventBus.on('theme-change', this.themeChangeListener);\r\n  },\r\n  beforeUnmount() {\r\n    EventBus.off('theme-change', this.themeChangeListener);\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}