{"ast":null,"code":"import CountryService from '../service/CountryService';\nexport default {\n  data() {\n    return {\n      countries: [],\n      filteredCountries: null,\n      cities: [{\n        name: 'New York',\n        code: 'NY'\n      }, {\n        name: 'Rome',\n        code: 'RM'\n      }, {\n        name: 'London',\n        code: 'LDN'\n      }, {\n        name: 'Istanbul',\n        code: 'IST'\n      }, {\n        name: 'Paris',\n        code: 'PRS'\n      }],\n      value1: null,\n      value2: null,\n      value3: null,\n      value4: null,\n      value5: null,\n      value6: null,\n      value7: null,\n      value8: null,\n      value9: null,\n      value10: null\n    };\n  },\n\n  created() {\n    this.countryService = new CountryService();\n  },\n\n  mounted() {\n    this.countryService.getCountries().then(countries => {\n      this.countries = countries;\n    });\n  },\n\n  methods: {\n    searchCountry(event) {\n      // in a real application, make a request to a remote url with the query and\n      // return filtered results, for demo we filter at client side\n      const filtered = [];\n      const query = event.query;\n\n      for (let i = 0; i < this.countries.length; i++) {\n        const country = this.countries[i];\n\n        if (country.name.toLowerCase().indexOf(query.toLowerCase()) == 0) {\n          filtered.push(country);\n        }\n      }\n\n      this.filteredCountries = filtered;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA0EA,OAAOA,cAAP,MAA2B,2BAA3B;AACA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,EADN;MAELC,iBAAiB,EAAE,IAFd;MAGLC,MAAM,EAAE,CACN;QAAEC,IAAI,EAAE,UAAR;QAAoBC,IAAI,EAAE;MAA1B,CADM,EAEN;QAAED,IAAI,EAAE,MAAR;QAAgBC,IAAI,EAAE;MAAtB,CAFM,EAGN;QAAED,IAAI,EAAE,QAAR;QAAkBC,IAAI,EAAE;MAAxB,CAHM,EAIN;QAAED,IAAI,EAAE,UAAR;QAAoBC,IAAI,EAAE;MAA1B,CAJM,EAKN;QAAED,IAAI,EAAE,OAAR;QAAiBC,IAAI,EAAE;MAAvB,CALM,CAHH;MAULC,MAAM,EAAE,IAVH;MAWLC,MAAM,EAAE,IAXH;MAYLC,MAAM,EAAE,IAZH;MAaLC,MAAM,EAAE,IAbH;MAcLC,MAAM,EAAE,IAdH;MAeLC,MAAM,EAAE,IAfH;MAgBLC,MAAM,EAAE,IAhBH;MAiBLC,MAAM,EAAE,IAjBH;MAkBLC,MAAM,EAAE,IAlBH;MAmBLC,OAAO,EAAE;IAnBJ,CAAP;EAqBD,CAvBY;;EAwBbC,OAAO,GAAG;IACR,KAAKC,cAAL,GAAsB,IAAIlB,cAAJ,EAAtB;EACD,CA1BY;;EA2BbmB,OAAO,GAAG;IACR,KAAKD,cAAL,CAAoBE,YAApB,GAAmCC,IAAnC,CAAyCnB,SAAD,IAAe;MACrD,KAAKA,SAAL,GAAiBA,SAAjB;IACD,CAFD;EAGD,CA/BY;;EAgCboB,OAAO,EAAE;IACPC,aAAa,CAACC,KAAD,EAAQ;MACnB;MACA;MACA,MAAMC,QAAO,GAAI,EAAjB;MACA,MAAMC,KAAI,GAAIF,KAAK,CAACE,KAApB;;MACA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKzB,SAAL,CAAe0B,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;QAC9C,MAAME,OAAM,GAAI,KAAK3B,SAAL,CAAeyB,CAAf,CAAhB;;QACA,IAAIE,OAAO,CAACxB,IAAR,CAAayB,WAAb,GAA2BC,OAA3B,CAAmCL,KAAK,CAACI,WAAN,EAAnC,KAA2D,CAA/D,EAAkE;UAChEL,QAAQ,CAACO,IAAT,CAAcH,OAAd;QACF;MACF;;MACA,KAAK1B,iBAAL,GAAyBsB,QAAzB;IACD;;EAbM;AAhCI,CAAf","names":["CountryService","data","countries","filteredCountries","cities","name","code","value1","value2","value3","value4","value5","value6","value7","value8","value9","value10","created","countryService","mounted","getCountries","then","methods","searchCountry","event","filtered","query","i","length","country","toLowerCase","indexOf","push"],"sourceRoot":"","sources":["D:\\sakai-vue\\src\\components\\FloatLabelDemo.vue"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <h5>Float Label</h5>\r\n    <div class=\"grid p-fluid mt-3\">\r\n      <div class=\"field col-12 md:col-4\">\r\n\t\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t\t<InputText type=\"text\" id=\"inputtext\" v-model=\"value1\" />\r\n\t\t\t\t\t<label for=\"inputtext\">InputText</label>\r\n\t\t\t\t</span>\r\n      </div>\r\n      <div class=\"field col-12 md:col-4\">\r\n\t\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t\t<AutoComplete id=\"autocomplete\" v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\"></AutoComplete>\r\n\t\t\t\t\t<label for=\"autocomplete\">AutoComplete</label>\r\n\t\t\t\t</span>\r\n      </div>\r\n      <div class=\"field col-12 md:col-4\">\r\n\t\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t\t<Calendar inputId=\"calendar\" v-model=\"value3\"></Calendar>\r\n\t\t\t\t\t<label for=\"calendar\">Calendar</label>\r\n\t\t\t\t</span>\r\n      </div>\r\n      <div class=\"field col-12 md:col-4\">\r\n\t\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t\t<Chips inputId=\"chips\" v-model=\"value4\"></Chips>\r\n\t\t\t\t\t<label for=\"chips\">Chips</label>\r\n\t\t\t\t</span>\r\n      </div>\r\n      <div class=\"field col-12 md:col-4\">\r\n\t\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t\t<InputMask id=\"inputmask\" mask=\"99/99/9999\" v-model=\"value5\"></InputMask>\r\n\t\t\t\t\t<label for=\"inputmask\">InputMask</label>\r\n\t\t\t\t</span>\r\n      </div>\r\n      <div class=\"field col-12 md:col-4\">\r\n\t\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t\t<InputNumber id=\"inputnumber\" v-model=\"value6\"></InputNumber>\r\n\t\t\t\t\t<label for=\"inputnumber\">InputNumber</label>\r\n\t\t\t\t</span>\r\n      </div>\r\n      <div class=\"field col-12 md:col-4\">\r\n        <div class=\"p-inputgroup\">\r\n\t\t\t\t\t<span class=\"p-inputgroup-addon\">\r\n\t\t\t\t\t\t<i class=\"pi pi-user\"></i>\r\n\t\t\t\t\t</span>\r\n          <span class=\"p-float-label\">\r\n\t\t\t\t\t\t<InputText type=\"text\" id=\"inputgroup\" v-model=\"value7\" />\r\n\t\t\t\t\t\t<label for=\"inputgroup\">InputGroup</label>\r\n\t\t\t\t\t</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"field col-12 md:col-4\">\r\n\t\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t\t<Dropdown id=\"dropdown\" :options=\"cities\" v-model=\"value8\" optionLabel=\"name\"></Dropdown>\r\n\t\t\t\t\t<label for=\"dropdown\">Dropdown</label>\r\n\t\t\t\t</span>\r\n      </div>\r\n      <div class=\"field col-12 md:col-4\">\r\n\t\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t\t<MultiSelect id=\"multiselect\" :options=\"cities\" v-model=\"value9\" optionLabel=\"name\" :filter=\"false\"></MultiSelect>\r\n\t\t\t\t\t<label for=\"multiselect\">MultiSelect</label>\r\n\t\t\t\t</span>\r\n      </div>\r\n      <div class=\"field col-12 md:col-4\">\r\n\t\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t\t<Textarea inputId=\"textarea\" rows=\"3\" cols=\"30\" v-model=\"value10\"></Textarea>\r\n\t\t\t\t\t<label for=\"textarea\">Textarea</label>\r\n\t\t\t\t</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CountryService from '../service/CountryService';\r\nexport default {\r\n  data() {\r\n    return {\r\n      countries: [],\r\n      filteredCountries: null,\r\n      cities: [\r\n        { name: 'New York', code: 'NY' },\r\n        { name: 'Rome', code: 'RM' },\r\n        { name: 'London', code: 'LDN' },\r\n        { name: 'Istanbul', code: 'IST' },\r\n        { name: 'Paris', code: 'PRS' },\r\n      ],\r\n      value1: null,\r\n      value2: null,\r\n      value3: null,\r\n      value4: null,\r\n      value5: null,\r\n      value6: null,\r\n      value7: null,\r\n      value8: null,\r\n      value9: null,\r\n      value10: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.countryService = new CountryService();\r\n  },\r\n  mounted() {\r\n    this.countryService.getCountries().then((countries) => {\r\n      this.countries = countries;\r\n    });\r\n  },\r\n  methods: {\r\n    searchCountry(event) {\r\n      // in a real application, make a request to a remote url with the query and\r\n      // return filtered results, for demo we filter at client side\r\n      const filtered = [];\r\n      const query = event.query;\r\n      for (let i = 0; i < this.countries.length; i++) {\r\n        const country = this.countries[i];\r\n        if (country.name.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n          filtered.push(country);\r\n        }\r\n      }\r\n      this.filteredCountries = filtered;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}